export interface AudioFilter {
    readonly resampleRatio: number;
    call(input: Float32Array): Int16Array;
}
export declare function newSampler(sourceSampleRate: number, targetSampleRate: number): AudioFilter;
/**
 * BypassSampler is a re-sampler that simply returns the passed buffer without performing any sampling.
 */
export declare class BypassSampler implements AudioFilter {
    readonly resampleRatio = 1;
    call(input: Float32Array): Int16Array;
}
/**
 * DownSampler is a re-sampler that performs downsampling on the passed audio buffer.
 */
export declare class DownSampler implements AudioFilter {
    readonly resampleRatio: number;
    private readonly filter;
    private buffer;
    constructor(sourceSampleRate: number, targetSampleRate: number, filter: Float32Array);
    call(input: Float32Array): Int16Array;
}
