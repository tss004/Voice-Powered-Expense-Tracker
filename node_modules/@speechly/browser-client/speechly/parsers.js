"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function parseTentativeTranscript(data) {
    // eslint-disable-next-line @typescript-eslint/camelcase
    return data.words.map(({ word, index, start_timestamp, end_timestamp }) => {
        return {
            value: word,
            index: index,
            startTimestamp: start_timestamp,
            endTimestamp: end_timestamp,
            isFinal: false,
        };
    });
}
exports.parseTentativeTranscript = parseTentativeTranscript;
function parseTranscript(data) {
    // eslint-disable-next-line @typescript-eslint/camelcase
    return {
        value: data.word,
        index: data.index,
        startTimestamp: data.start_timestamp,
        endTimestamp: data.end_timestamp,
        isFinal: true,
    };
}
exports.parseTranscript = parseTranscript;
function parseTentativeEntities(data) {
    // eslint-disable-next-line @typescript-eslint/camelcase
    return data.entities.map(({ entity, value, start_position, end_position }) => {
        return {
            type: entity,
            value: value,
            startPosition: start_position,
            endPosition: end_position,
            isFinal: false,
        };
    });
}
exports.parseTentativeEntities = parseTentativeEntities;
function parseEntity(data) {
    // eslint-disable-next-line @typescript-eslint/camelcase
    return {
        type: data.entity,
        value: data.value,
        startPosition: data.start_position,
        endPosition: data.end_position,
        isFinal: true,
    };
}
exports.parseEntity = parseEntity;
function parseIntent(data, isFinal) {
    // eslint-disable-next-line @typescript-eslint/camelcase
    return {
        intent: data.intent,
        isFinal: isFinal,
    };
}
exports.parseIntent = parseIntent;
//# sourceMappingURL=parsers.js.map