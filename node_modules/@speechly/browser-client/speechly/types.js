"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * All possible states of a Speechly API client. Failed, NoBrowserSupport and NoAudioConsent states are non-recoverable
 * erroneous states, which should be handled by the end user, according to the semantics of an application.
 * Other states can also be utilized for e.g. enabling and disabling recording buttons or showing the status in the app.
 * It is also possible to use arithmetics for state comparison, e.g. `if (state < speechly.ClientState.Disconnected)`,
 * to react to non-recoverable states.
 * @public
 */
var ClientState;
(function (ClientState) {
    ClientState[ClientState["Failed"] = 0] = "Failed";
    ClientState[ClientState["NoBrowserSupport"] = 1] = "NoBrowserSupport";
    ClientState[ClientState["NoAudioConsent"] = 2] = "NoAudioConsent";
    ClientState[ClientState["Disconnected"] = 3] = "Disconnected";
    ClientState[ClientState["Disconnecting"] = 4] = "Disconnecting";
    ClientState[ClientState["Connecting"] = 5] = "Connecting";
    ClientState[ClientState["Connected"] = 6] = "Connected";
    ClientState[ClientState["Starting"] = 7] = "Starting";
    ClientState[ClientState["Stopping"] = 8] = "Stopping";
    ClientState[ClientState["Recording"] = 9] = "Recording";
})(ClientState = exports.ClientState || (exports.ClientState = {}));
//# sourceMappingURL=types.js.map