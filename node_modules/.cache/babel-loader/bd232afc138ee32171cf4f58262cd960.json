{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar types_1 = require(\"./types\");\n/**\n * Converts client state value to a string, which could be useful for debugging or metrics.\n * @param state - the state of the client\n * @public\n */\n\n\nfunction stateToString(state) {\n  var _a;\n\n  return (_a = states.get(state)) !== null && _a !== void 0 ? _a : unknown;\n}\n\nexports.stateToString = stateToString; // TODO: generate this from the enum.\n\nvar unknown = 'Unknown';\nvar states = new Map([[types_1.ClientState.Failed, 'Failed'], [types_1.ClientState.NoBrowserSupport, 'NoBrowserSupport'], [types_1.ClientState.NoAudioConsent, 'NoAudioConsent'], [types_1.ClientState.Disconnecting, 'Disconnecting'], [types_1.ClientState.Disconnected, 'Disconnected'], [types_1.ClientState.Connecting, 'Connecting'], [types_1.ClientState.Connected, 'Connected'], [types_1.ClientState.Starting, 'Starting'], [types_1.ClientState.Stopping, 'Stopping'], [types_1.ClientState.Recording, 'Recording']]);","map":{"version":3,"sources":["../../src/speechly/state.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA;;;;AAIG;;;AACH,SAAgB,aAAhB,CAA8B,KAA9B,EAAgD;;;AAC9C,SAAA,CAAA,EAAA,GAAO,MAAM,CAAC,GAAP,CAAW,KAAX,CAAP,MAAwB,IAAxB,IAAwB,EAAA,KAAA,KAAA,CAAxB,GAAwB,EAAxB,GAA4B,OAA5B;AACD;;AAFD,OAAA,CAAA,aAAA,GAAA,aAAA,C,CAIA;;AACA,IAAM,OAAO,GAAG,SAAhB;AACA,IAAM,MAAM,GAAG,IAAI,GAAJ,CAA6B,CAC1C,CAAC,OAAA,CAAA,WAAA,CAAY,MAAb,EAAqB,QAArB,CAD0C,EAE1C,CAAC,OAAA,CAAA,WAAA,CAAY,gBAAb,EAA+B,kBAA/B,CAF0C,EAG1C,CAAC,OAAA,CAAA,WAAA,CAAY,cAAb,EAA6B,gBAA7B,CAH0C,EAI1C,CAAC,OAAA,CAAA,WAAA,CAAY,aAAb,EAA4B,eAA5B,CAJ0C,EAK1C,CAAC,OAAA,CAAA,WAAA,CAAY,YAAb,EAA2B,cAA3B,CAL0C,EAM1C,CAAC,OAAA,CAAA,WAAA,CAAY,UAAb,EAAyB,YAAzB,CAN0C,EAO1C,CAAC,OAAA,CAAA,WAAA,CAAY,SAAb,EAAwB,WAAxB,CAP0C,EAQ1C,CAAC,OAAA,CAAA,WAAA,CAAY,QAAb,EAAuB,UAAvB,CAR0C,EAS1C,CAAC,OAAA,CAAA,WAAA,CAAY,QAAb,EAAuB,UAAvB,CAT0C,EAU1C,CAAC,OAAA,CAAA,WAAA,CAAY,SAAb,EAAwB,WAAxB,CAV0C,CAA7B,CAAf","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"./types\");\n/**\n * Converts client state value to a string, which could be useful for debugging or metrics.\n * @param state - the state of the client\n * @public\n */\nfunction stateToString(state) {\n    var _a;\n    return (_a = states.get(state)) !== null && _a !== void 0 ? _a : unknown;\n}\nexports.stateToString = stateToString;\n// TODO: generate this from the enum.\nconst unknown = 'Unknown';\nconst states = new Map([\n    [types_1.ClientState.Failed, 'Failed'],\n    [types_1.ClientState.NoBrowserSupport, 'NoBrowserSupport'],\n    [types_1.ClientState.NoAudioConsent, 'NoAudioConsent'],\n    [types_1.ClientState.Disconnecting, 'Disconnecting'],\n    [types_1.ClientState.Disconnected, 'Disconnected'],\n    [types_1.ClientState.Connecting, 'Connecting'],\n    [types_1.ClientState.Connected, 'Connected'],\n    [types_1.ClientState.Starting, 'Starting'],\n    [types_1.ClientState.Stopping, 'Stopping'],\n    [types_1.ClientState.Recording, 'Recording'],\n]);\n//# sourceMappingURL=state.js.map"]},"metadata":{},"sourceType":"script"}