{"ast":null,"code":"/**\n * Create slice of source array or array-like object\n */\nfunction slice(arr, start, end) {\n  var len = arr.length;\n\n  if (start == null) {\n    start = 0;\n  } else if (start < 0) {\n    start = Math.max(len + start, 0);\n  } else {\n    start = Math.min(start, len);\n  }\n\n  if (end == null) {\n    end = len;\n  } else if (end < 0) {\n    end = Math.max(len + end, 0);\n  } else {\n    end = Math.min(end, len);\n  }\n\n  var result = [];\n\n  while (start < end) {\n    result.push(arr[start++]);\n  }\n\n  return result;\n}\n\nmodule.exports = slice;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Projects/Expense-Tracker/node_modules/mout/array/slice.js"],"names":["slice","arr","start","end","len","length","Math","max","min","result","push","module","exports"],"mappings":"AAEI;AACJ;AACA;AACI,SAASA,KAAT,CAAeC,GAAf,EAAoBC,KAApB,EAA2BC,GAA3B,EAA+B;AAC3B,MAAIC,GAAG,GAAGH,GAAG,CAACI,MAAd;;AAEA,MAAIH,KAAK,IAAI,IAAb,EAAmB;AACfA,IAAAA,KAAK,GAAG,CAAR;AACH,GAFD,MAEO,IAAIA,KAAK,GAAG,CAAZ,EAAe;AAClBA,IAAAA,KAAK,GAAGI,IAAI,CAACC,GAAL,CAASH,GAAG,GAAGF,KAAf,EAAsB,CAAtB,CAAR;AACH,GAFM,MAEA;AACHA,IAAAA,KAAK,GAAGI,IAAI,CAACE,GAAL,CAASN,KAAT,EAAgBE,GAAhB,CAAR;AACH;;AAED,MAAID,GAAG,IAAI,IAAX,EAAiB;AACbA,IAAAA,GAAG,GAAGC,GAAN;AACH,GAFD,MAEO,IAAID,GAAG,GAAG,CAAV,EAAa;AAChBA,IAAAA,GAAG,GAAGG,IAAI,CAACC,GAAL,CAASH,GAAG,GAAGD,GAAf,EAAoB,CAApB,CAAN;AACH,GAFM,MAEA;AACHA,IAAAA,GAAG,GAAGG,IAAI,CAACE,GAAL,CAASL,GAAT,EAAcC,GAAd,CAAN;AACH;;AAED,MAAIK,MAAM,GAAG,EAAb;;AACA,SAAOP,KAAK,GAAGC,GAAf,EAAoB;AAChBM,IAAAA,MAAM,CAACC,IAAP,CAAYT,GAAG,CAACC,KAAK,EAAN,CAAf;AACH;;AAED,SAAOO,MAAP;AACH;;AAEDE,MAAM,CAACC,OAAP,GAAiBZ,KAAjB","sourcesContent":["\n\n    /**\n     * Create slice of source array or array-like object\n     */\n    function slice(arr, start, end){\n        var len = arr.length;\n\n        if (start == null) {\n            start = 0;\n        } else if (start < 0) {\n            start = Math.max(len + start, 0);\n        } else {\n            start = Math.min(start, len);\n        }\n\n        if (end == null) {\n            end = len;\n        } else if (end < 0) {\n            end = Math.max(len + end, 0);\n        } else {\n            end = Math.min(end, len);\n        }\n\n        var result = [];\n        while (start < end) {\n            result.push(arr[start++]);\n        }\n\n        return result;\n    }\n\n    module.exports = slice;\n\n\n"]},"metadata":{},"sourceType":"script"}