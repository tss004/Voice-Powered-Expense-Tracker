{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapSpeechStateToClientState = exports.SpeechlyUiEvents = void 0;\n\nvar browser_client_1 = require(\"@speechly/browser-client\");\n\nvar react_client_1 = require(\"@speechly/react-client\");\n\nvar SpeechlyUiEvents;\n\n(function (SpeechlyUiEvents) {\n  SpeechlyUiEvents[\"TangentRelease\"] = \"TangentRelease\";\n  SpeechlyUiEvents[\"TangentPress\"] = \"TangentPress\";\n  SpeechlyUiEvents[\"Notification\"] = \"Notification\";\n  SpeechlyUiEvents[\"WarningNotification\"] = \"WarningNotification\";\n  SpeechlyUiEvents[\"DismissNotification\"] = \"DismissNotification\";\n})(SpeechlyUiEvents = exports.SpeechlyUiEvents || (exports.SpeechlyUiEvents = {}));\n\n;\n\nvar mapSpeechStateToClientState = function (s) {\n  switch (s) {\n    case react_client_1.SpeechState.Failed:\n      return browser_client_1.ClientState.Failed;\n\n    case react_client_1.SpeechState.NoBrowserSupport:\n      return browser_client_1.ClientState.NoBrowserSupport;\n\n    case react_client_1.SpeechState.NoAudioConsent:\n      return browser_client_1.ClientState.NoAudioConsent;\n\n    case react_client_1.SpeechState.Idle:\n      return browser_client_1.ClientState.Disconnected;\n    // return ClientState.Disconnecting:\n\n    case react_client_1.SpeechState.Connecting:\n      return browser_client_1.ClientState.Connecting;\n\n    case react_client_1.SpeechState.Ready:\n      return browser_client_1.ClientState.Connected;\n\n    case react_client_1.SpeechState.Recording:\n      // return ClientState.Starting:\n      return browser_client_1.ClientState.Recording;\n\n    case react_client_1.SpeechState.Loading:\n      return browser_client_1.ClientState.Stopping;\n\n    default:\n      return browser_client_1.ClientState.Failed;\n  }\n};\n\nexports.mapSpeechStateToClientState = mapSpeechStateToClientState;","map":{"version":3,"sources":["../src/types.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,gBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AAEA,IAAY,gBAAZ;;AAAA,CAAA,UAAY,gBAAZ,EAA4B;AAC1B,EAAA,gBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAA;AACA,EAAA,gBAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA,EAAA,gBAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA,EAAA,gBAAA,CAAA,qBAAA,CAAA,GAAA,qBAAA;AACA,EAAA,gBAAA,CAAA,qBAAA,CAAA,GAAA,qBAAA;AACD,CAND,EAAY,gBAAgB,GAAhB,OAAA,CAAA,gBAAA,KAAA,OAAA,CAAA,gBAAA,GAAgB,EAAhB,CAAZ;;AAMC;;AAEM,IAAM,2BAA2B,GAAG,UAAC,CAAD,EAAe;AACxD,UAAQ,CAAR;AACE,SAAK,cAAA,CAAA,WAAA,CAAY,MAAjB;AACE,aAAO,gBAAA,CAAA,WAAA,CAAY,MAAnB;;AACF,SAAK,cAAA,CAAA,WAAA,CAAY,gBAAjB;AACE,aAAO,gBAAA,CAAA,WAAA,CAAY,gBAAnB;;AACF,SAAK,cAAA,CAAA,WAAA,CAAY,cAAjB;AACE,aAAO,gBAAA,CAAA,WAAA,CAAY,cAAnB;;AACF,SAAK,cAAA,CAAA,WAAA,CAAY,IAAjB;AACE,aAAO,gBAAA,CAAA,WAAA,CAAY,YAAnB;AACA;;AACF,SAAK,cAAA,CAAA,WAAA,CAAY,UAAjB;AACE,aAAO,gBAAA,CAAA,WAAA,CAAY,UAAnB;;AACF,SAAK,cAAA,CAAA,WAAA,CAAY,KAAjB;AACE,aAAO,gBAAA,CAAA,WAAA,CAAY,SAAnB;;AACF,SAAK,cAAA,CAAA,WAAA,CAAY,SAAjB;AACE;AACA,aAAO,gBAAA,CAAA,WAAA,CAAY,SAAnB;;AACF,SAAK,cAAA,CAAA,WAAA,CAAY,OAAjB;AACE,aAAO,gBAAA,CAAA,WAAA,CAAY,QAAnB;;AACF;AACE,aAAO,gBAAA,CAAA,WAAA,CAAY,MAAnB;AApBJ;AAsBD,CAvBM;;AAAM,OAAA,CAAA,2BAAA,GAA2B,2BAA3B","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapSpeechStateToClientState = exports.SpeechlyUiEvents = void 0;\nvar browser_client_1 = require(\"@speechly/browser-client\");\nvar react_client_1 = require(\"@speechly/react-client\");\nvar SpeechlyUiEvents;\n(function (SpeechlyUiEvents) {\n    SpeechlyUiEvents[\"TangentRelease\"] = \"TangentRelease\";\n    SpeechlyUiEvents[\"TangentPress\"] = \"TangentPress\";\n    SpeechlyUiEvents[\"Notification\"] = \"Notification\";\n    SpeechlyUiEvents[\"WarningNotification\"] = \"WarningNotification\";\n    SpeechlyUiEvents[\"DismissNotification\"] = \"DismissNotification\";\n})(SpeechlyUiEvents = exports.SpeechlyUiEvents || (exports.SpeechlyUiEvents = {}));\n;\nvar mapSpeechStateToClientState = function (s) {\n    switch (s) {\n        case react_client_1.SpeechState.Failed:\n            return browser_client_1.ClientState.Failed;\n        case react_client_1.SpeechState.NoBrowserSupport:\n            return browser_client_1.ClientState.NoBrowserSupport;\n        case react_client_1.SpeechState.NoAudioConsent:\n            return browser_client_1.ClientState.NoAudioConsent;\n        case react_client_1.SpeechState.Idle:\n            return browser_client_1.ClientState.Disconnected;\n        // return ClientState.Disconnecting:\n        case react_client_1.SpeechState.Connecting:\n            return browser_client_1.ClientState.Connecting;\n        case react_client_1.SpeechState.Ready:\n            return browser_client_1.ClientState.Connected;\n        case react_client_1.SpeechState.Recording:\n            // return ClientState.Starting:\n            return browser_client_1.ClientState.Recording;\n        case react_client_1.SpeechState.Loading:\n            return browser_client_1.ClientState.Stopping;\n        default:\n            return browser_client_1.ClientState.Failed;\n    }\n};\nexports.mapSpeechStateToClientState = mapSpeechStateToClientState;\n//# sourceMappingURL=types.js.map"]},"metadata":{},"sourceType":"script"}