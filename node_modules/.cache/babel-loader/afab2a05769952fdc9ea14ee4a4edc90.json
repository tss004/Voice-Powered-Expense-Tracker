{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/hp/Desktop/Projects/Expense-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"C:/Users/hp/Desktop/Projects/Expense-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/hp/Desktop/Projects/Expense-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar types_1 = require(\"./types\");\n\nvar worker_1 = __importDefault(require(\"./worker\"));\n\nvar WebWorkerController = /*#__PURE__*/function () {\n  function WebWorkerController() {\n    var _this = this;\n\n    _classCallCheck(this, WebWorkerController);\n\n    this.startCbs = [];\n    this.stopCbs = [];\n\n    this.onResponseCb = function () {};\n\n    this.onCloseCb = function () {};\n\n    this.onWebsocketMessage = function (event) {\n      var response = event.data;\n\n      switch (response.type) {\n        case types_1.WebsocketResponseType.Opened:\n          if (_this.resolveInitialization != null) {\n            _this.resolveInitialization();\n          }\n\n          break;\n\n        case types_1.WebsocketResponseType.SourceSampleRateSetSuccess:\n          if (_this.resolveSourceSampleRateSet != null) {\n            _this.resolveSourceSampleRateSet();\n          }\n\n          break;\n\n        case types_1.WebsocketResponseType.Started:\n          _this.startCbs.forEach(function (cb) {\n            try {\n              cb(undefined, response.audio_context);\n            } catch (e) {\n              console.error('[SpeechlyClient] Error while invoking \"onStart\" callback:', e);\n            }\n          });\n\n          _this.startCbs.length = 0;\n          break;\n\n        case types_1.WebsocketResponseType.Stopped:\n          _this.stopCbs.forEach(function (cb) {\n            try {\n              cb(undefined, response.audio_context);\n            } catch (e) {\n              console.error('[SpeechlyClient] Error while invoking \"onStop\" callback:', e);\n            }\n          });\n\n          _this.stopCbs.length = 0;\n          break;\n\n        default:\n          _this.onResponseCb(response);\n\n      }\n    };\n\n    var blob = new Blob([worker_1.default], {\n      type: 'text/javascript'\n    });\n    var blobURL = window.URL.createObjectURL(blob);\n    this.worker = new Worker(blobURL);\n    this.worker.addEventListener('message', this.onWebsocketMessage);\n  }\n\n  _createClass(WebWorkerController, [{\n    key: \"onResponse\",\n    value: function onResponse(cb) {\n      this.onResponseCb = cb;\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose(cb) {\n      this.onCloseCb = cb;\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize(apiUrl, authToken, targetSampleRate, debug) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.worker.postMessage({\n                  type: 'INIT',\n                  apiUrl: apiUrl,\n                  authToken: authToken,\n                  targetSampleRate: targetSampleRate,\n                  debug: debug\n                });\n                return _context.abrupt(\"return\", new Promise(function (resolve) {\n                  _this2.resolveInitialization = resolve;\n                }));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"setSourceSampleRate\",\n    value: function setSourceSampleRate(sourceSampleRate) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.worker.postMessage({\n                  type: 'SET_SOURSE_SAMPLE_RATE',\n                  sourceSampleRate: sourceSampleRate\n                });\n                return _context2.abrupt(\"return\", new Promise(function (resolve) {\n                  _this3.resolveSourceSampleRateSet = resolve;\n                }));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this4 = this;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this4.worker.postMessage({\n                    type: 'CLOSE',\n                    code: 1000,\n                    message: 'Client has ended the session'\n                  });\n\n                  resolve();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n    }\n  }, {\n    key: \"startContext\",\n    value: function startContext(appId) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this5 = this;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this5.startCbs.push(function (err, id) {\n                    if (err !== undefined) {\n                      reject(err);\n                    } else {\n                      resolve(id);\n                    }\n                  });\n\n                  if (appId != null) {\n                    _this5.worker.postMessage({\n                      type: 'START_CONTEXT',\n                      appId: appId\n                    });\n                  } else {\n                    _this5.worker.postMessage({\n                      type: 'START_CONTEXT'\n                    });\n                  }\n                }));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n    }\n  }, {\n    key: \"stopContext\",\n    value: function stopContext() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var _this6 = this;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this6.stopCbs.push(function (err, id) {\n                    if (err !== undefined) {\n                      reject(err);\n                    } else {\n                      resolve(id);\n                    }\n                  });\n\n                  _this6.worker.postMessage({\n                    type: 'STOP_CONTEXT'\n                  });\n                }));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n    }\n  }, {\n    key: \"switchContext\",\n    value: function switchContext(appId) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var _this7 = this;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this7.startCbs.push(function (err, id) {\n                    if (err !== undefined) {\n                      reject(err);\n                    } else {\n                      resolve(id);\n                    }\n                  });\n\n                  _this7.worker.postMessage({\n                    type: 'SWITCH_CONTEXT',\n                    appId: appId\n                  });\n                }));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n    }\n  }, {\n    key: \"postMessage\",\n    value: function postMessage(message) {\n      this.worker.postMessage(message);\n    }\n  }, {\n    key: \"sendAudio\",\n    value: function sendAudio(audioChunk) {\n      this.worker.postMessage({\n        type: 'AUDIO',\n        payload: audioChunk\n      });\n    }\n  }]);\n\n  return WebWorkerController;\n}();\n\nexports.WebWorkerController = WebWorkerController;","map":{"version":3,"sources":["../../src/websocket/webWorkerController.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_1 = require(\"./types\");\nconst worker_1 = __importDefault(require(\"./worker\"));\nclass WebWorkerController {\n    constructor() {\n        this.startCbs = [];\n        this.stopCbs = [];\n        this.onResponseCb = () => { };\n        this.onCloseCb = () => { };\n        this.onWebsocketMessage = (event) => {\n            const response = event.data;\n            switch (response.type) {\n                case types_1.WebsocketResponseType.Opened:\n                    if (this.resolveInitialization != null) {\n                        this.resolveInitialization();\n                    }\n                    break;\n                case types_1.WebsocketResponseType.SourceSampleRateSetSuccess:\n                    if (this.resolveSourceSampleRateSet != null) {\n                        this.resolveSourceSampleRateSet();\n                    }\n                    break;\n                case types_1.WebsocketResponseType.Started:\n                    this.startCbs.forEach(cb => {\n                        try {\n                            cb(undefined, response.audio_context);\n                        }\n                        catch (e) {\n                            console.error('[SpeechlyClient] Error while invoking \"onStart\" callback:', e);\n                        }\n                    });\n                    this.startCbs.length = 0;\n                    break;\n                case types_1.WebsocketResponseType.Stopped:\n                    this.stopCbs.forEach(cb => {\n                        try {\n                            cb(undefined, response.audio_context);\n                        }\n                        catch (e) {\n                            console.error('[SpeechlyClient] Error while invoking \"onStop\" callback:', e);\n                        }\n                    });\n                    this.stopCbs.length = 0;\n                    break;\n                default:\n                    this.onResponseCb(response);\n            }\n        };\n        const blob = new Blob([worker_1.default], { type: 'text/javascript' });\n        const blobURL = window.URL.createObjectURL(blob);\n        this.worker = new Worker(blobURL);\n        this.worker.addEventListener('message', this.onWebsocketMessage);\n    }\n    onResponse(cb) {\n        this.onResponseCb = cb;\n    }\n    onClose(cb) {\n        this.onCloseCb = cb;\n    }\n    initialize(apiUrl, authToken, targetSampleRate, debug) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.worker.postMessage({\n                type: 'INIT',\n                apiUrl,\n                authToken,\n                targetSampleRate,\n                debug,\n            });\n            return new Promise(resolve => {\n                this.resolveInitialization = resolve;\n            });\n        });\n    }\n    setSourceSampleRate(sourceSampleRate) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.worker.postMessage({\n                type: 'SET_SOURSE_SAMPLE_RATE',\n                sourceSampleRate,\n            });\n            return new Promise(resolve => {\n                this.resolveSourceSampleRateSet = resolve;\n            });\n        });\n    }\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.worker.postMessage({\n                    type: 'CLOSE',\n                    code: 1000,\n                    message: 'Client has ended the session',\n                });\n                resolve();\n            });\n        });\n    }\n    startContext(appId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.startCbs.push((err, id) => {\n                    if (err !== undefined) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(id);\n                    }\n                });\n                if (appId != null) {\n                    this.worker.postMessage({ type: 'START_CONTEXT', appId });\n                }\n                else {\n                    this.worker.postMessage({ type: 'START_CONTEXT' });\n                }\n            });\n        });\n    }\n    stopContext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.stopCbs.push((err, id) => {\n                    if (err !== undefined) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(id);\n                    }\n                });\n                this.worker.postMessage({ type: 'STOP_CONTEXT' });\n            });\n        });\n    }\n    switchContext(appId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.startCbs.push((err, id) => {\n                    if (err !== undefined) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(id);\n                    }\n                });\n                this.worker.postMessage({ type: 'SWITCH_CONTEXT', appId });\n            });\n        });\n    }\n    postMessage(message) {\n        this.worker.postMessage(message);\n    }\n    sendAudio(audioChunk) {\n        this.worker.postMessage({ type: 'AUDIO', payload: audioChunk });\n    }\n}\nexports.WebWorkerController = WebWorkerController;\n//# sourceMappingURL=webWorkerController.js.map"]},"metadata":{},"sourceType":"script"}