{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { ExpenseTrackerContext } from './context/Context';\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\n\nconst useTransactions = title => {\n  _s();\n\n  resetCategories();\n  const {\n    transactions\n  } = useContext(ExpenseTrackerContext);\n  const rightTransactions = transactions.filter(t => t.type === title);\n  const total = rightTransactions.reduce((acc, currVal) => acc += currVal.amount, 0);\n  const categories = title === 'Income' ? incomeCategories : expenseCategories;\n  console.log({\n    rightTransactions,\n    total,\n    categories\n  });\n  rightTransactions.forEach(t => {\n    const category = categories.find(c => c.type === t.category);\n    if (category) category.amount += t.amount;\n  });\n  const filteredCategories = categories.filter(c => c.amount > 0);\n  const chartData = {\n    datasets: [{\n      data: filteredCategories.map(c => c.amount),\n      backgroundColor: filteredCategories.map(c => c.color)\n    }],\n    labels: filteredCategories.map(c => c.type)\n  };\n  return {\n    filteredCategories,\n    total,\n    chartData\n  };\n};\n\n_s(useTransactions, \"Ni2LnfH2vyq3Bhy/VEUHhQfs92s=\");\n\nexport default useTransactions;","map":{"version":3,"sources":["C:/Users/hp/Desktop/expensetracker/src/useTransactions.js"],"names":["useContext","ExpenseTrackerContext","incomeCategories","expenseCategories","resetCategories","useTransactions","title","transactions","rightTransactions","filter","t","type","total","reduce","acc","currVal","amount","categories","console","log","forEach","category","find","c","filteredCategories","chartData","datasets","data","map","backgroundColor","color","labels"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,SAASC,gBAAT,EAA2BC,iBAA3B,EAA8CC,eAA9C,QAAqE,wBAArE;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjCF,EAAAA,eAAe;AACf,QAAM;AAAEG,IAAAA;AAAF,MAAmBP,UAAU,CAACC,qBAAD,CAAnC;AACA,QAAMO,iBAAiB,GAAGD,YAAY,CAACE,MAAb,CAAqBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAWL,KAAtC,CAA1B;AACA,QAAMM,KAAK,GAAGJ,iBAAiB,CAACK,MAAlB,CAAyB,CAACC,GAAD,EAAMC,OAAN,KAAkBD,GAAG,IAAIC,OAAO,CAACC,MAA1D,EAAkE,CAAlE,CAAd;AACA,QAAMC,UAAU,GAAGX,KAAK,KAAK,QAAV,GAAqBJ,gBAArB,GAAwCC,iBAA3D;AAEAe,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACX,IAAAA,iBAAD;AAAmBI,IAAAA,KAAnB;AAAyBK,IAAAA;AAAzB,GAAZ;AAEAT,EAAAA,iBAAiB,CAACY,OAAlB,CAA2BV,CAAD,IAAO;AAC/B,UAAMW,QAAQ,GAAGJ,UAAU,CAACK,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACZ,IAAF,KAAWD,CAAC,CAACW,QAApC,CAAjB;AAEA,QAAIA,QAAJ,EAAcA,QAAQ,CAACL,MAAT,IAAmBN,CAAC,CAACM,MAArB;AACf,GAJD;AAMA,QAAMQ,kBAAkB,GAAGP,UAAU,CAACR,MAAX,CAAmBc,CAAD,IAAOA,CAAC,CAACP,MAAF,GAAW,CAApC,CAA3B;AAEA,QAAMS,SAAS,GAAG;AAChBC,IAAAA,QAAQ,EAAE,CAAC;AACTC,MAAAA,IAAI,EAAEH,kBAAkB,CAACI,GAAnB,CAAwBL,CAAD,IAAOA,CAAC,CAACP,MAAhC,CADG;AAETa,MAAAA,eAAe,EAAEL,kBAAkB,CAACI,GAAnB,CAAwBL,CAAD,IAAOA,CAAC,CAACO,KAAhC;AAFR,KAAD,CADM;AAKhBC,IAAAA,MAAM,EAAEP,kBAAkB,CAACI,GAAnB,CAAwBL,CAAD,IAAOA,CAAC,CAACZ,IAAhC;AALQ,GAAlB;AAQA,SAAO;AAAEa,IAAAA,kBAAF;AAAsBZ,IAAAA,KAAtB;AAA6Ba,IAAAA;AAA7B,GAAP;AACD,CA1BD;;GAAMpB,e;;AA4BN,eAAeA,eAAf","sourcesContent":["import { useContext } from 'react';\r\nimport { ExpenseTrackerContext } from './context/Context';\r\n\r\nimport { incomeCategories, expenseCategories, resetCategories } from './constants/categories';\r\n\r\nconst useTransactions = (title) => {\r\n  resetCategories();\r\n  const { transactions } = useContext(ExpenseTrackerContext);\r\n  const rightTransactions = transactions.filter((t) => t.type === title);\r\n  const total = rightTransactions.reduce((acc, currVal) => acc += currVal.amount, 0);\r\n  const categories = title === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  console.log({rightTransactions,total,categories});\r\n\r\n  rightTransactions.forEach((t) => {\r\n    const category = categories.find((c) => c.type === t.category);\r\n\r\n    if (category) category.amount += t.amount;\r\n  });\r\n\r\n  const filteredCategories = categories.filter((c) => c.amount > 0);\r\n\r\n  const chartData = {\r\n    datasets: [{\r\n      data: filteredCategories.map((c) => c.amount),\r\n      backgroundColor: filteredCategories.map((c) => c.color),\r\n    }],\r\n    labels: filteredCategories.map((c) => c.type),\r\n  };\r\n\r\n  return { filteredCategories, total, chartData };\r\n};\r\n\r\nexport default useTransactions;\r\n\r\n"]},"metadata":{},"sourceType":"module"}