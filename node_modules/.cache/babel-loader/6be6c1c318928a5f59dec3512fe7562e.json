{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Default sample rate for microphone streams.\n * @public\n */\n\nexports.DefaultSampleRate = 16000;\n/**\n * Error to be thrown when the microphone was accessed before it was initialized.\n * @public\n */\n\nexports.ErrNotInitialized = new Error('Microphone is not initialized');\n/**\n * Error to be thrown when the initialize method of a Microphone instance is called more than once.\n * @public\n */\n\nexports.ErrAlreadyInitialized = new Error('Microphone is already initialized');\n/**\n * Error to be thrown when the device does not support the Microphone instance's target audio APIs.\n * @public\n */\n\nexports.ErrDeviceNotSupported = new Error('Current device does not support microphone API');\n/**\n * Error to be thrown when user did not give consent to the application to record audio.\n * @public\n */\n\nexports.ErrNoAudioConsent = new Error('Microphone consent is no given');","map":{"version":3,"sources":["../../src/microphone/types.ts"],"names":[],"mappings":";;;;;AAAA;;;AAGG;;AACU,OAAA,CAAA,iBAAA,GAAoB,KAApB;AAEb;;;AAGG;;AACU,OAAA,CAAA,iBAAA,GAAoB,IAAI,KAAJ,CAAU,+BAAV,CAApB;AAEb;;;AAGG;;AACU,OAAA,CAAA,qBAAA,GAAwB,IAAI,KAAJ,CAAU,mCAAV,CAAxB;AAEb;;;AAGG;;AACU,OAAA,CAAA,qBAAA,GAAwB,IAAI,KAAJ,CAAU,gDAAV,CAAxB;AAEb;;;AAGG;;AACU,OAAA,CAAA,iBAAA,GAAoB,IAAI,KAAJ,CAAU,gCAAV,CAApB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Default sample rate for microphone streams.\n * @public\n */\nexports.DefaultSampleRate = 16000;\n/**\n * Error to be thrown when the microphone was accessed before it was initialized.\n * @public\n */\nexports.ErrNotInitialized = new Error('Microphone is not initialized');\n/**\n * Error to be thrown when the initialize method of a Microphone instance is called more than once.\n * @public\n */\nexports.ErrAlreadyInitialized = new Error('Microphone is already initialized');\n/**\n * Error to be thrown when the device does not support the Microphone instance's target audio APIs.\n * @public\n */\nexports.ErrDeviceNotSupported = new Error('Current device does not support microphone API');\n/**\n * Error to be thrown when user did not give consent to the application to record audio.\n * @public\n */\nexports.ErrNoAudioConsent = new Error('Microphone consent is no given');\n//# sourceMappingURL=types.js.map"]},"metadata":{},"sourceType":"script"}