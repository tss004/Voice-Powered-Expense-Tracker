{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpeechProvider = exports.SpeechContext = void 0;\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar browser_client_1 = require(\"@speechly/browser-client\");\n\nvar types_1 = require(\"./types\");\n\nvar state_1 = require(\"./state\");\n/**\n * A React context that holds the state of Speechly SLU API client.\n * @public\n */\n\n\nexports.SpeechContext = react_1.default.createContext({\n  initialise: function initialise() {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , Promise.resolve()];\n      });\n    });\n  },\n  toggleRecording: function toggleRecording() {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , Promise.resolve()];\n      });\n    });\n  },\n  switchApp: function switchApp() {},\n  speechState: types_1.SpeechState.Idle\n});\n/**\n * The provider for SpeechContext.\n *\n * Make sure you have only one SpeechProvider in your application,\n * because otherwise the audio will be mixed up and unusable.\n *\n * It is possible to switch the props on the fly, which will make provider stop current client if it's running\n * and start a new one.\n * @public\n */\n\nvar SpeechProvider =\n/** @class */\nfunction (_super) {\n  __extends(SpeechProvider, _super);\n\n  function SpeechProvider(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.initialiseAudio = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, client, clientState;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _a = this.state, client = _a.client, clientState = _a.clientState;\n              if (!(clientState === browser_client_1.ClientState.Disconnected)) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , client.initialize()];\n\n            case 1:\n              _b.sent();\n\n              _b.label = 2;\n\n            case 2:\n              return [2\n              /*return*/\n              , Promise.resolve()];\n          }\n        });\n      });\n    };\n\n    _this.startContext = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, client, clientState, appId, startedContextPromise, _b;\n\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _a = this.state, client = _a.client, clientState = _a.clientState, appId = _a.appId;\n              _b = clientState;\n\n              switch (_b) {\n                case browser_client_1.ClientState.Disconnected:\n                  return [3\n                  /*break*/\n                  , 1];\n\n                case browser_client_1.ClientState.Connected:\n                  return [3\n                  /*break*/\n                  , 3];\n\n                case browser_client_1.ClientState.Stopping:\n                  return [3\n                  /*break*/\n                  , 3];\n              }\n\n              return [3\n              /*break*/\n              , 4];\n\n            case 1:\n              return [4\n              /*yield*/\n              , client.initialize() // falls through\n              ];\n\n            case 2:\n              _c.sent();\n\n              _c.label = 3;\n\n            case 3:\n              if (appId !== undefined) {\n                startedContextPromise = client.startContext(appId);\n              } else {\n                startedContextPromise = client.startContext();\n              }\n\n              return [3\n              /*break*/\n              , 5];\n\n            case 4:\n              console.warn('Cannot start context - client is not connected');\n              _c.label = 5;\n\n            case 5:\n              this.setState({\n                startedContextPromise: startedContextPromise\n              });\n              if (!(startedContextPromise !== undefined)) return [3\n              /*break*/\n              , 7];\n              return [4\n              /*yield*/\n              , startedContextPromise];\n\n            case 6:\n              _c.sent();\n\n              _c.label = 7;\n\n            case 7:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    _this.stopContext = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, client, startedContextPromise;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _a = this.state, client = _a.client, startedContextPromise = _a.startedContextPromise;\n              if (!(startedContextPromise !== undefined)) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , startedContextPromise];\n\n            case 1:\n              _b.sent();\n\n              _b.label = 2;\n\n            case 2:\n              return [4\n              /*yield*/\n              , client.stopContext()];\n\n            case 3:\n              _b.sent();\n\n              return [2\n              /*return*/\n              , Promise.resolve()];\n          }\n        });\n      });\n    };\n\n    _this.toggleRecording = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var toggleIsOn;\n        return __generator(this, function (_a) {\n          toggleIsOn = this.state.toggleIsOn;\n          this.setState({\n            toggleIsOn: !toggleIsOn\n          });\n\n          if (!toggleIsOn) {\n            return [2\n            /*return*/\n            , this.startContext()];\n          }\n\n          return [2\n          /*return*/\n          , this.stopContext()];\n        });\n      });\n    };\n\n    _this.switchApp = function (appId) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, client, clientState;\n\n        return __generator(this, function (_b) {\n          _a = this.state, client = _a.client, clientState = _a.clientState;\n          this.setState({\n            appId: appId\n          });\n\n          if (clientState === browser_client_1.ClientState.Recording) {\n            return [2\n            /*return*/\n            , client.switchContext(appId)];\n          }\n\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    };\n\n    _this.initialiseClient = function (opts) {\n      var _a;\n\n      var client = new browser_client_1.Client(opts);\n      client.onStateChange(_this.onClientStateChange);\n      client.onSegmentChange(_this.onSegmentChange);\n      client.onTranscript(_this.onTranscript);\n      client.onEntity(_this.onEntity);\n      client.onIntent(_this.onIntent);\n\n      if (!((_a = opts.disableTenative) !== null && _a !== void 0 ? _a : false)) {\n        client.onTentativeIntent(_this.onTentativeIntent);\n        client.onTentativeTranscript(_this.onTentativeTranscript);\n        client.onTentativeEntities(_this.onTentativeEntities);\n      }\n\n      return client;\n    };\n\n    _this.onClientStateChange = function (clientState) {\n      _this.setState({\n        clientState: clientState,\n        recordingState: state_1.mapClientState(clientState)\n      });\n    };\n\n    _this.onSegmentChange = function (segment) {\n      if (!segment.isFinal) {\n        _this.setState({\n          segment: segment\n        });\n\n        return;\n      } // Reset individual values when a segment is finalised.\n\n\n      _this.setState({\n        segment: segment,\n        tentativeTranscript: undefined,\n        transcript: undefined,\n        tentativeEntities: undefined,\n        entity: undefined,\n        tentativeIntent: undefined,\n        intent: undefined\n      });\n    };\n\n    _this.onTentativeTranscript = function (contextId, segmentId, words, text) {\n      _this.setState({\n        tentativeTranscript: {\n          contextId: contextId,\n          segmentId: segmentId,\n          text: text,\n          words: words\n        }\n      });\n    };\n\n    _this.onTranscript = function (contextId, segmentId, word) {\n      _this.setState({\n        transcript: {\n          contextId: contextId,\n          segmentId: segmentId,\n          word: word\n        }\n      });\n    };\n\n    _this.onTentativeEntities = function (contextId, segmentId, entities) {\n      _this.setState({\n        tentativeEntities: {\n          contextId: contextId,\n          segmentId: segmentId,\n          entities: entities\n        }\n      });\n    };\n\n    _this.onEntity = function (contextId, segmentId, entity) {\n      _this.setState({\n        entity: {\n          contextId: contextId,\n          segmentId: segmentId,\n          entity: entity\n        }\n      });\n    };\n\n    _this.onTentativeIntent = function (contextId, segmentId, intent) {\n      _this.setState({\n        tentativeIntent: {\n          contextId: contextId,\n          segmentId: segmentId,\n          intent: intent\n        }\n      });\n    };\n\n    _this.onIntent = function (contextId, segmentId, intent) {\n      _this.setState({\n        intent: {\n          contextId: contextId,\n          segmentId: segmentId,\n          intent: intent\n        }\n      });\n    };\n\n    _this.state = {\n      client: _this.initialiseClient(props),\n      recordingState: types_1.SpeechState.Idle,\n      clientState: browser_client_1.ClientState.Disconnected,\n      toggleIsOn: false,\n      appId: props.appId,\n      startedContextPromise: undefined\n    };\n    return _this;\n  }\n\n  SpeechProvider.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.state,\n        appId = _a.appId,\n        recordingState = _a.recordingState,\n        segment = _a.segment,\n        tentativeTranscript = _a.tentativeTranscript,\n        transcript = _a.transcript,\n        tentativeEntities = _a.tentativeEntities,\n        entity = _a.entity,\n        tentativeIntent = _a.tentativeIntent,\n        intent = _a.intent;\n    return react_1.default.createElement(exports.SpeechContext.Provider, {\n      value: {\n        initialise: this.initialiseAudio,\n        toggleRecording: this.toggleRecording,\n        switchApp: function switchApp(appId) {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              return [2\n              /*return*/\n              , this.switchApp(appId)];\n            });\n          });\n        },\n        appId: appId,\n        speechState: recordingState,\n        segment: segment,\n        tentativeTranscript: tentativeTranscript,\n        transcript: transcript,\n        tentativeEntities: tentativeEntities,\n        entity: entity,\n        tentativeIntent: tentativeIntent,\n        intent: intent\n      }\n    }, this.props.children);\n  };\n\n  SpeechProvider.prototype.componentDidUpdate = function (prevProps) {\n    return __awaiter(this, void 0, void 0, function () {\n      var props, client, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            props = this.props; // We cannot compare microphone / api client / storage implementations,\n            // so changes in those will be ignored.\n            // A better approach for those would be to use separate contexts.\n\n            if (props.appId === prevProps.appId && props.language === prevProps.language && props.sampleRate === prevProps.sampleRate && props.debug === prevProps.debug && props.loginUrl === prevProps.loginUrl && props.apiUrl === prevProps.apiUrl) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            client = this.state.client;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , client.close()];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_1 = _a.sent();\n            console.error('Error closing Speechly client:', e_1);\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            this.setState({\n              client: this.initialiseClient(props)\n            });\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SpeechProvider.prototype.componentWillUnmount = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.state.client.close()];\n\n          case 1:\n            _b.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            _a = _b.sent();\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return SpeechProvider;\n}(react_1.default.Component);\n\nexports.SpeechProvider = SpeechProvider;","map":{"version":3,"sources":["../src/context.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechProvider = exports.SpeechContext = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar browser_client_1 = require(\"@speechly/browser-client\");\nvar types_1 = require(\"./types\");\nvar state_1 = require(\"./state\");\n/**\n * A React context that holds the state of Speechly SLU API client.\n * @public\n */\nexports.SpeechContext = react_1.default.createContext({\n    initialise: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        return [2 /*return*/, Promise.resolve()];\n    }); }); },\n    toggleRecording: function () { return __awaiter(void 0, void 0, void 0, function () { return __generator(this, function (_a) {\n        return [2 /*return*/, Promise.resolve()];\n    }); }); },\n    switchApp: function () { },\n    speechState: types_1.SpeechState.Idle,\n});\n/**\n * The provider for SpeechContext.\n *\n * Make sure you have only one SpeechProvider in your application,\n * because otherwise the audio will be mixed up and unusable.\n *\n * It is possible to switch the props on the fly, which will make provider stop current client if it's running\n * and start a new one.\n * @public\n */\nvar SpeechProvider = /** @class */ (function (_super) {\n    __extends(SpeechProvider, _super);\n    function SpeechProvider(props) {\n        var _this = _super.call(this, props) || this;\n        _this.initialiseAudio = function () { return __awaiter(_this, void 0, void 0, function () {\n            var _a, client, clientState;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.state, client = _a.client, clientState = _a.clientState;\n                        if (!(clientState === browser_client_1.ClientState.Disconnected)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, client.initialize()];\n                    case 1:\n                        _b.sent();\n                        _b.label = 2;\n                    case 2: return [2 /*return*/, Promise.resolve()];\n                }\n            });\n        }); };\n        _this.startContext = function () { return __awaiter(_this, void 0, void 0, function () {\n            var _a, client, clientState, appId, startedContextPromise, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this.state, client = _a.client, clientState = _a.clientState, appId = _a.appId;\n                        _b = clientState;\n                        switch (_b) {\n                            case browser_client_1.ClientState.Disconnected: return [3 /*break*/, 1];\n                            case browser_client_1.ClientState.Connected: return [3 /*break*/, 3];\n                            case browser_client_1.ClientState.Stopping: return [3 /*break*/, 3];\n                        }\n                        return [3 /*break*/, 4];\n                    case 1: return [4 /*yield*/, client.initialize()\n                        // falls through\n                    ];\n                    case 2:\n                        _c.sent();\n                        _c.label = 3;\n                    case 3:\n                        if (appId !== undefined) {\n                            startedContextPromise = client.startContext(appId);\n                        }\n                        else {\n                            startedContextPromise = client.startContext();\n                        }\n                        return [3 /*break*/, 5];\n                    case 4:\n                        console.warn('Cannot start context - client is not connected');\n                        _c.label = 5;\n                    case 5:\n                        this.setState({ startedContextPromise: startedContextPromise });\n                        if (!(startedContextPromise !== undefined)) return [3 /*break*/, 7];\n                        return [4 /*yield*/, startedContextPromise];\n                    case 6:\n                        _c.sent();\n                        _c.label = 7;\n                    case 7: return [2 /*return*/];\n                }\n            });\n        }); };\n        _this.stopContext = function () { return __awaiter(_this, void 0, void 0, function () {\n            var _a, client, startedContextPromise;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.state, client = _a.client, startedContextPromise = _a.startedContextPromise;\n                        if (!(startedContextPromise !== undefined)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, startedContextPromise];\n                    case 1:\n                        _b.sent();\n                        _b.label = 2;\n                    case 2: return [4 /*yield*/, client.stopContext()];\n                    case 3:\n                        _b.sent();\n                        return [2 /*return*/, Promise.resolve()];\n                }\n            });\n        }); };\n        _this.toggleRecording = function () { return __awaiter(_this, void 0, void 0, function () {\n            var toggleIsOn;\n            return __generator(this, function (_a) {\n                toggleIsOn = this.state.toggleIsOn;\n                this.setState({ toggleIsOn: !toggleIsOn });\n                if (!toggleIsOn) {\n                    return [2 /*return*/, this.startContext()];\n                }\n                return [2 /*return*/, this.stopContext()];\n            });\n        }); };\n        _this.switchApp = function (appId) { return __awaiter(_this, void 0, void 0, function () {\n            var _a, client, clientState;\n            return __generator(this, function (_b) {\n                _a = this.state, client = _a.client, clientState = _a.clientState;\n                this.setState({ appId: appId });\n                if (clientState === browser_client_1.ClientState.Recording) {\n                    return [2 /*return*/, client.switchContext(appId)];\n                }\n                return [2 /*return*/];\n            });\n        }); };\n        _this.initialiseClient = function (opts) {\n            var _a;\n            var client = new browser_client_1.Client(opts);\n            client.onStateChange(_this.onClientStateChange);\n            client.onSegmentChange(_this.onSegmentChange);\n            client.onTranscript(_this.onTranscript);\n            client.onEntity(_this.onEntity);\n            client.onIntent(_this.onIntent);\n            if (!((_a = opts.disableTenative) !== null && _a !== void 0 ? _a : false)) {\n                client.onTentativeIntent(_this.onTentativeIntent);\n                client.onTentativeTranscript(_this.onTentativeTranscript);\n                client.onTentativeEntities(_this.onTentativeEntities);\n            }\n            return client;\n        };\n        _this.onClientStateChange = function (clientState) {\n            _this.setState({ clientState: clientState, recordingState: state_1.mapClientState(clientState) });\n        };\n        _this.onSegmentChange = function (segment) {\n            if (!segment.isFinal) {\n                _this.setState({ segment: segment });\n                return;\n            }\n            // Reset individual values when a segment is finalised.\n            _this.setState({\n                segment: segment,\n                tentativeTranscript: undefined,\n                transcript: undefined,\n                tentativeEntities: undefined,\n                entity: undefined,\n                tentativeIntent: undefined,\n                intent: undefined,\n            });\n        };\n        _this.onTentativeTranscript = function (contextId, segmentId, words, text) {\n            _this.setState({\n                tentativeTranscript: {\n                    contextId: contextId,\n                    segmentId: segmentId,\n                    text: text,\n                    words: words,\n                },\n            });\n        };\n        _this.onTranscript = function (contextId, segmentId, word) {\n            _this.setState({\n                transcript: {\n                    contextId: contextId,\n                    segmentId: segmentId,\n                    word: word,\n                },\n            });\n        };\n        _this.onTentativeEntities = function (contextId, segmentId, entities) {\n            _this.setState({\n                tentativeEntities: {\n                    contextId: contextId,\n                    segmentId: segmentId,\n                    entities: entities,\n                },\n            });\n        };\n        _this.onEntity = function (contextId, segmentId, entity) {\n            _this.setState({\n                entity: {\n                    contextId: contextId,\n                    segmentId: segmentId,\n                    entity: entity,\n                },\n            });\n        };\n        _this.onTentativeIntent = function (contextId, segmentId, intent) {\n            _this.setState({\n                tentativeIntent: {\n                    contextId: contextId,\n                    segmentId: segmentId,\n                    intent: intent,\n                },\n            });\n        };\n        _this.onIntent = function (contextId, segmentId, intent) {\n            _this.setState({\n                intent: {\n                    contextId: contextId,\n                    segmentId: segmentId,\n                    intent: intent,\n                },\n            });\n        };\n        _this.state = {\n            client: _this.initialiseClient(props),\n            recordingState: types_1.SpeechState.Idle,\n            clientState: browser_client_1.ClientState.Disconnected,\n            toggleIsOn: false,\n            appId: props.appId,\n            startedContextPromise: undefined,\n        };\n        return _this;\n    }\n    SpeechProvider.prototype.render = function () {\n        var _this = this;\n        var _a = this.state, appId = _a.appId, recordingState = _a.recordingState, segment = _a.segment, tentativeTranscript = _a.tentativeTranscript, transcript = _a.transcript, tentativeEntities = _a.tentativeEntities, entity = _a.entity, tentativeIntent = _a.tentativeIntent, intent = _a.intent;\n        return (react_1.default.createElement(exports.SpeechContext.Provider, { value: {\n                initialise: this.initialiseAudio,\n                toggleRecording: this.toggleRecording,\n                switchApp: function (appId) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                    return [2 /*return*/, this.switchApp(appId)];\n                }); }); },\n                appId: appId,\n                speechState: recordingState,\n                segment: segment,\n                tentativeTranscript: tentativeTranscript,\n                transcript: transcript,\n                tentativeEntities: tentativeEntities,\n                entity: entity,\n                tentativeIntent: tentativeIntent,\n                intent: intent,\n            } }, this.props.children));\n    };\n    SpeechProvider.prototype.componentDidUpdate = function (prevProps) {\n        return __awaiter(this, void 0, void 0, function () {\n            var props, client, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        props = this.props;\n                        // We cannot compare microphone / api client / storage implementations,\n                        // so changes in those will be ignored.\n                        // A better approach for those would be to use separate contexts.\n                        if (props.appId === prevProps.appId &&\n                            props.language === prevProps.language &&\n                            props.sampleRate === prevProps.sampleRate &&\n                            props.debug === prevProps.debug &&\n                            props.loginUrl === prevProps.loginUrl &&\n                            props.apiUrl === prevProps.apiUrl) {\n                            return [2 /*return*/];\n                        }\n                        client = this.state.client;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, client.close()];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        console.error('Error closing Speechly client:', e_1);\n                        return [3 /*break*/, 4];\n                    case 4:\n                        this.setState({ client: this.initialiseClient(props) });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SpeechProvider.prototype.componentWillUnmount = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.state.client.close()];\n                    case 1:\n                        _b.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        _a = _b.sent();\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return SpeechProvider;\n}(react_1.default.Component));\nexports.SpeechProvider = SpeechProvider;\n//# sourceMappingURL=context.js.map"]},"metadata":{},"sourceType":"script"}