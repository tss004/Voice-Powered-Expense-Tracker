{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapClientState = void 0;\n\nvar browser_client_1 = require(\"@speechly/browser-client\");\n\nvar types_1 = require(\"./types\");\n\nfunction mapClientState(s) {\n  switch (s) {\n    case browser_client_1.ClientState.Failed:\n      return types_1.SpeechState.Failed;\n\n    case browser_client_1.ClientState.NoBrowserSupport:\n      return types_1.SpeechState.NoBrowserSupport;\n\n    case browser_client_1.ClientState.NoAudioConsent:\n      return types_1.SpeechState.NoAudioConsent;\n\n    case browser_client_1.ClientState.Disconnecting:\n    case browser_client_1.ClientState.Disconnected:\n      return types_1.SpeechState.Idle;\n\n    case browser_client_1.ClientState.Connecting:\n      return types_1.SpeechState.Connecting;\n\n    case browser_client_1.ClientState.Connected:\n      return types_1.SpeechState.Ready;\n\n    case browser_client_1.ClientState.Starting:\n    case browser_client_1.ClientState.Recording:\n      return types_1.SpeechState.Recording;\n\n    case browser_client_1.ClientState.Stopping:\n      return types_1.SpeechState.Loading;\n\n    default:\n      return types_1.SpeechState.Failed;\n  }\n}\n\nexports.mapClientState = mapClientState;","map":{"version":3,"sources":["../src/state.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,gBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,SAAgB,cAAhB,CAA+B,CAA/B,EAA6C;AAC3C,UAAQ,CAAR;AACE,SAAK,gBAAA,CAAA,WAAA,CAAY,MAAjB;AACE,aAAO,OAAA,CAAA,WAAA,CAAY,MAAnB;;AACF,SAAK,gBAAA,CAAA,WAAA,CAAY,gBAAjB;AACE,aAAO,OAAA,CAAA,WAAA,CAAY,gBAAnB;;AACF,SAAK,gBAAA,CAAA,WAAA,CAAY,cAAjB;AACE,aAAO,OAAA,CAAA,WAAA,CAAY,cAAnB;;AACF,SAAK,gBAAA,CAAA,WAAA,CAAY,aAAjB;AACA,SAAK,gBAAA,CAAA,WAAA,CAAY,YAAjB;AACE,aAAO,OAAA,CAAA,WAAA,CAAY,IAAnB;;AACF,SAAK,gBAAA,CAAA,WAAA,CAAY,UAAjB;AACE,aAAO,OAAA,CAAA,WAAA,CAAY,UAAnB;;AACF,SAAK,gBAAA,CAAA,WAAA,CAAY,SAAjB;AACE,aAAO,OAAA,CAAA,WAAA,CAAY,KAAnB;;AACF,SAAK,gBAAA,CAAA,WAAA,CAAY,QAAjB;AACA,SAAK,gBAAA,CAAA,WAAA,CAAY,SAAjB;AACE,aAAO,OAAA,CAAA,WAAA,CAAY,SAAnB;;AACF,SAAK,gBAAA,CAAA,WAAA,CAAY,QAAjB;AACE,aAAO,OAAA,CAAA,WAAA,CAAY,OAAnB;;AACF;AACE,aAAO,OAAA,CAAA,WAAA,CAAY,MAAnB;AApBJ;AAsBD;;AAvBD,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapClientState = void 0;\nvar browser_client_1 = require(\"@speechly/browser-client\");\nvar types_1 = require(\"./types\");\nfunction mapClientState(s) {\n    switch (s) {\n        case browser_client_1.ClientState.Failed:\n            return types_1.SpeechState.Failed;\n        case browser_client_1.ClientState.NoBrowserSupport:\n            return types_1.SpeechState.NoBrowserSupport;\n        case browser_client_1.ClientState.NoAudioConsent:\n            return types_1.SpeechState.NoAudioConsent;\n        case browser_client_1.ClientState.Disconnecting:\n        case browser_client_1.ClientState.Disconnected:\n            return types_1.SpeechState.Idle;\n        case browser_client_1.ClientState.Connecting:\n            return types_1.SpeechState.Connecting;\n        case browser_client_1.ClientState.Connected:\n            return types_1.SpeechState.Ready;\n        case browser_client_1.ClientState.Starting:\n        case browser_client_1.ClientState.Recording:\n            return types_1.SpeechState.Recording;\n        case browser_client_1.ClientState.Stopping:\n            return types_1.SpeechState.Loading;\n        default:\n            return types_1.SpeechState.Failed;\n    }\n}\nexports.mapClientState = mapClientState;\n//# sourceMappingURL=state.js.map"]},"metadata":{},"sourceType":"script"}