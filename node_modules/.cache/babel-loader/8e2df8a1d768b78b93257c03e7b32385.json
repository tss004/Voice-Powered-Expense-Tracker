{"ast":null,"code":"/*!\n * Chart.js v3.3.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    const me = this;\n\n    if (me._request) {\n      return;\n    }\n\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n\n      me._request = null;\n\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        me._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        me._notify(chart, anims, date, 'complete');\n\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    me._lastDate = date;\n\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    const me = this;\n\n    if (me._active) {\n      me._notify(false);\n\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    const me = this;\n\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n\n      me._notify(false);\n    }\n  }\n\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || elapsed < duration);\n\n    if (!me._active) {\n      me._target[prop] = to;\n\n      me._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n\n    delete stacks[axis][meta.index];\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n\n    me._dataCheck();\n\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n\n    me._dataCheck();\n\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    me._resyncElements(resetNewElements);\n\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n\n  parse(start, count) {\n    const me = this;\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = me;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {\n        all: true\n      });\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = me._getOtherScale(scale);\n\n    const stack = canStack && meta._stacked && {\n      keys: getSortedDatasetIndices(me.chart, true),\n      values: null\n    };\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || elements.length - start;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context || (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => me.getContext(index, active);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      me.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n\n    me.parse(start, count);\n\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n\n}\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = me._getRuler();\n\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : me._calculateBarValuePixels(i);\n\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || me.index === stack._top || me.index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n\n      if (item.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const {\n      base: baseValue,\n      minBarLength\n    } = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n\n      if (value === 0) {\n        base -= size / 2;\n      }\n\n      head = base + size;\n    }\n\n    const actualBase = baseValue || 0;\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n\n    unclipArea(chart.ctx);\n  }\n\n}\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const {\n      data,\n      _parsed\n    } = this._cachedMeta;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      me.updateElement(point, i, properties, mode);\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n\n    const chartWeight = me._getRingWeight(me.index);\n\n    const {\n      circumference,\n      rotation\n    } = me._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n\n    const circumference = me._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n\n    let startAngle = me._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n\n          if (controller !== me) {\n            controller.configure();\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked\n    } = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n      properties.parsed = parsed;\n\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n\n}\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - radiusLength * me.index;\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {}\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n\n    me.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nclass ScatterController extends LineController {}\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n\n  formats() {\n    return abstract();\n  }\n\n  parse(value, format) {\n    return abstract();\n  }\n\n  format(timestamp, format) {\n    return abstract();\n  }\n\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n\n  diff(a, b, unit) {\n    return abstract();\n  }\n\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n\n}\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return getRelativePosition$1(e, chart);\n}\n\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\n\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {\n    childList: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n\n    return !!(container && _getParentNode(container));\n  }\n\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      return me;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n\n}\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right\n  } = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    const me = this;\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = me.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal() ? me.width + margins.left + margins.right : me.height + margins.top + margins.bottom;\n\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = me._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)), Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    me.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = me;\n\n    const display = me._isVisible();\n\n    const isHorizontal = me.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && me.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = me._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    me._handleMargins();\n\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    const me = this;\n\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    const me = this;\n\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n\n    return me.$context || (me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = me._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = me._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n\n          case 'bottom':\n            top -= height;\n            break;\n        }\n\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n\n          case 'right':\n            left -= width;\n            break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {\n      position,\n      ticks\n    } = me.options;\n    const rotation = -toRadians(me.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = me.options;\n\n    const labelSizes = me._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    const me = this;\n\n    if (me.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = me.chart;\n    const position = me.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: me.left,\n        bottom: chart.height,\n        right: me.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: me.top,\n        left: 0,\n        bottom: me.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n\n  drawBorder() {\n    const me = this;\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n    if (!axisWidth) {\n      return;\n    }\n\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = me.ctx;\n\n    const area = me._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom') {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    const me = this;\n\n    if (!me._isVisible()) {\n      return;\n    }\n\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n\n      }];\n    }\n\n    return [{\n      z: gz,\n\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n\n    }, {\n      z: gz + 1,\n\n      draw() {\n        me.drawBorder();\n      }\n\n    }, {\n      z: tz,\n\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  _maxDigits() {\n    const me = this;\n\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === me.plugins && arg.id) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args, filter) {\n    const me = this;\n\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n\n      me._notify(me._init, chart, 'install');\n    }\n\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n\n    const result = me._notify(descriptors, chart, hook, args);\n\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n\n      me._notify(me._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    if (isScriptable(prop) && isFunction(proxy[prop]) || isIndexable(prop) && isArray(proxy[prop])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"3.3.2\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n\n    me._initialize();\n\n    if (me.attached) {\n      me.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n      return new BasicPlatform();\n    }\n\n    return new DomPlatform();\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n\n    me.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [me, newSize], me);\n\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = me;\n\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n\n    me._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n\n        meta = me.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    me._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, scale => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n\n    me._plugins.invalidate();\n\n    if (me.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    me._minPadding = minPadding;\n\n    me._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    me._updateDatasets(mode);\n\n    me.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    me._layers.sort(compare2Level('z', '_idx'));\n\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n\n    me.render();\n  }\n\n  _updateLayout(minPadding) {\n    const me = this;\n\n    if (me.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      me._layers.push(...box._layers());\n    }, me);\n\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    me.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n\n    if (me.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n\n    me.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    const me = this;\n\n    if (me.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({\n        chart: me\n      });\n    }\n  }\n\n  draw() {\n    const me = this;\n    let i;\n\n    if (me._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = me._resizeBeforeDraw;\n\n      me._resize(width, height);\n\n      me._resizeBeforeDraw = null;\n    }\n\n    me.clear();\n\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n\n    if (me.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = me._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n\n    me._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n\n    me.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    const me = this;\n\n    if (me.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = me.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = {\n      chart: this,\n      type: 'chart'\n    });\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {\n      visible\n    });\n    me.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n\n      delete me._metasets[datasetIndex];\n    }\n  }\n\n  destroy() {\n    const me = this;\n    const {\n      canvas,\n      ctx\n    } = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n\n    me.config.clearCache();\n\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  bindEvents() {\n    this.bindUserEvents();\n\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = function (e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      me._eventHandler(e);\n    };\n\n    each(me.options.events, type => _add(type, listener));\n  }\n\n  bindResponsiveEvents() {\n    const me = this;\n\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n\n    let detached;\n\n    const attached = () => {\n      _remove('attach', attached);\n\n      me.attached = true;\n      me.resize();\n\n      _add('resize', listener);\n\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      me.attached = false;\n\n      _remove('resize', listener);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      me._active = active;\n\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.type);\n\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = me._handleEvent(e, replay);\n\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      me.render();\n    }\n\n    return me;\n  }\n\n  _handleEvent(e, replay) {\n    const me = this;\n    const {\n      _active: lastActive = [],\n      options\n    } = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n\n    me._lastEvent = null;\n\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n\n    changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      me._active = active;\n\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n\n}\n\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element, offset, end) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + offset + pixelMargin : 0;\n  const alpha = end - start;\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset;\n  const endAngle = end - angleOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, startAngle + TAU);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n\n  pathArc(ctx, element, offset, endAngle);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, endAngle) {\n  const {\n    options\n  } = element;\n  const inner = options.borderAlign === 'inner';\n\n  if (!options.borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, endAngle);\n  ctx.stroke();\n}\n\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n    const withinRadius = distance >= innerRadius && distance <= outerRadius;\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const me = this;\n    const {\n      options,\n      circumference\n    } = me;\n    const offset = (options.offset || 0) / 2;\n    me.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n    let radiusOffset = 0;\n\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset);\n    drawBorder(ctx, me, radiusOffset, endAngle);\n    ctx.restore();\n  }\n\n}\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n\n      me._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n\n    const segments = _boundSegments(me, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n\n    const segmentMethod = _getSegmentMethod(me);\n\n    let loop = me._loop;\n    start = start || 0;\n    count = count || me.points.length - start;\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n\n}\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n\n}\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    return res;\n  }\n\n  edge = bar.horizontal ? parseEdge(edge, 'left', 'right', bar.base > bar.x) : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (meta.type !== 'line') {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n\n  return null;\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(segment => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction buildStackLine(source) {\n  const {\n    chart,\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nconst isLineAndNotInHideAnimation = meta => meta.type === 'line' && !meta.hidden;\n\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return createBoundaryLine(boundary, line);\n}\n\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n\n    const targetLoop = !!target.pathSegment(ctx, tgt, {\n      move: lineLoop,\n      reverse: true\n    });\n    const loop = lineLoop && targetLoop;\n\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n\n    ctx.restore();\n    ctx.save();\n\n    _clip(ctx, target, area.bottom);\n  }\n\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n\n  ctx.restore();\n}\n\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nvar plugin_filler = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n\n  setDimensions() {\n    const me = this;\n\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, me.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  }\n\n  fit() {\n    const me = this;\n    const {\n      options,\n      ctx\n    } = me;\n\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = me._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {\n        left,\n        top,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    const me = this;\n\n    if (!me.options.display) {\n      return;\n    }\n\n    const titleHeight = me._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        }\n      }\n    } = me;\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    const me = this;\n\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n\n      me._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const me = this;\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = me;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n\n    const isHorizontal = me.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + fontSize / 2 + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n\n      me._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n\n}\n\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = me._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    const me = this;\n    return me.$context || (me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(me, {\n        chart: me._chart,\n        tooltip: me,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      cornerRadius,\n      caretSize\n    } = options;\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {\n      body\n    } = me;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + 1 : boxWidth + 2 : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    me._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({\n      datasetIndex,\n      index\n    }) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = me._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n\n    const positionChanged = me._positionChanged(active, e);\n\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      me._active = active;\n\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n\n}\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        let label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        const value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me.getMinMax(true);\n\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n\n    return value;\n  }\n\n  configure() {\n    const me = this;\n    super.configure();\n\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return me.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {\n  horizontal,\n  minRotation\n}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      beginAtZero\n    } = me.options;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let {\n      min,\n      max\n    } = me;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      setMax(max + 1);\n\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n    const tickFont = me._resolveTickFontOptions(0);\n\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n\n    me.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const me = this;\n    const {\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n\n    me.min = min;\n    me.max = max;\n  }\n\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return me.getPixelForDecimal(value === me.min ? 0 : (log10(value) - me._startValue) / me._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n\n}\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n  for (i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - size.w / 2;\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h\n    };\n  }\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= textSize.h / 2;\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const {\n      min,\n      max\n    } = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n\n  fit() {\n    const me = this;\n    const opts = me.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n    me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n\n    return (value - me.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const me = this;\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = me.options;\n\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawBorder() {}\n\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n\n    callback(label) {\n      return label;\n    },\n\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = me.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = me.min;\n    const max = me.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    me._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min)) : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n\n    const size = me._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = me.getMatchingVisibleMetas();\n\n    if (me._normalized && metas.length) {\n      return me._cache.data = metas[0].controller.getAllParsedValues(me);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n\n    return me._cache.data = me.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = me.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n\n    return me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n\n  initOffsets() {\n    const me = this;\n\n    const timestamps = me._getTimestampsForTable();\n\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {\n      min,\n      max\n    } = me;\n\n    if (!timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    const items = [min];\n    let i, ilen, curr;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n    return items;\n  }\n\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index) ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n\n}\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"sources":["C:/Users/hp/Desktop/Projects/Expense-Tracker/node_modules/chart.js/dist/chart.esm.js"],"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","i","isObject","b","isArray","d","defaults","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","defined","s","sign","j","isNullOrUndef","k","clipArea","m","unclipArea","_","_arrayUnique","t","toRadians","n","toPercentage","o","toDimension","T","TAU","p","formatNumber","q","_angleBetween","H","HALF_PI","P","PI","w","isNumber","x","_limitValue","y","_lookupByKey","z","getRelativePosition$1","A","_isPointInArea","B","_rlookupByKey","C","toPadding","D","each","E","getMaximumSize","F","_getParentNode","G","readUsedSize","I","throttled","J","supportsEventListenerOptions","K","log10","L","_factorize","M","finiteOrDefault","N","callback","O","_addGrace","Q","toDegrees","R","_measureText","S","_int16Range","U","_alignPixel","V","renderText","W","toFont","X","_toLeftRightCenter","Y","_alignStartEnd","Z","overrides","$","merge","a0","_capitalize","a1","descriptors","a2","isFunction","a3","_attachContext","a4","_createResolver","a5","_descriptors","a6","mergeIf","a7","uid","a8","debounce","a9","retinaScale","aa","clearCanvas","ab","setsEqual","ac","_elementsEqual","ad","getAngleFromPoint","ae","_readValueToProps","af","_updateBezierControlPoints","ag","_computeSegments","ah","_boundSegments","ai","_steppedInterpolation","aj","_bezierInterpolation","ak","_pointInLine","al","_steppedLineTo","am","_bezierCurveTo","an","drawPoint","ao","addRoundedRectPath","ap","toTRBL","aq","toTRBLCorners","ar","_boundSegment","as","_normalizeAngle","at","getRtlAdapter","au","overrideTextDirection","av","_textX","aw","restoreTextDirection","ax","noop","ay","distanceBetweenPoints","az","_setMinAndMaxByKey","aA","niceNum","aB","almostWhole","aC","almostEquals","aD","_decimalPlaces","aE","_longestText","aF","_filterBetween","aG","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","me","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","create","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","metas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","obj","bars","base","getBasePixel","horizontal","isHorizontal","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","height","width","_getStacks","last","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","grouped","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","interaction","_index_","offset","grid","_value_","beginAtZero","BubbleController","points","point","iPixel","getPixelForDecimal","vPixel","skip","radius","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","hidden","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","v1","wrapBoxes","boxes","layoutBoxes","setLayoutDims","layouts","params","layout","fullSize","availableWidth","hBoxMaxHeight","vBoxMaxWidth","availableHeight","buildLayoutBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","placeBoxes","userPadding","padding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","createAttachObserver","container","observer","MutationObserver","entries","addedNodes","added","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","args","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","includes","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","initialCanvas","existingChart","platform","_initializePlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","console","error","_initialize","maintainAspectRatio","responsive","bindEvents","OffscreenCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","events","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateDatasetVisibility","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","alpha","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","pointStyle","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","swap","startEnd","orig","v2","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","isLineAndNotInHideAnimation","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","hitbox","_draw","defaultColor","rtlHelper","rtl","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","leftForLtr","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","radiusAndPadding","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","step","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","adjustPointPositionForLabelHeight","getTextAlignForAngle","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","limit","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_maxIndex","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"mappings":"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","sourcesContent":["/*!\n * Chart.js v3.3.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as renderText, W as toFont, X as _toLeftRightCenter, Y as _alignStartEnd, Z as overrides, $ as merge, a0 as _capitalize, a1 as descriptors, a2 as isFunction, a3 as _attachContext, a4 as _createResolver, a5 as _descriptors, a6 as mergeIf, a7 as uid, a8 as debounce, a9 as retinaScale, aa as clearCanvas, ab as setsEqual, ac as _elementsEqual, ad as getAngleFromPoint, ae as _readValueToProps, af as _updateBezierControlPoints, ag as _computeSegments, ah as _boundSegments, ai as _steppedInterpolation, aj as _bezierInterpolation, ak as _pointInLine, al as _steppedLineTo, am as _bezierCurveTo, an as drawPoint, ao as addRoundedRectPath, ap as toTRBL, aq as toTRBLCorners, ar as _boundSegment, as as _normalizeAngle, at as getRtlAdapter, au as overrideTextDirection, av as _textX, aw as restoreTextDirection, ax as noop, ay as distanceBetweenPoints, az as _setMinAndMaxByKey, aA as niceNum, aB as almostWhole, aC as almostEquals, aD as _decimalPlaces, aE as _longestText, aF as _filterBetween, aG as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive) {\n  for (const meta of vScale.getMatchingVisibleMetas('bar').reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true);\n    stack._bottom = getLastIndexInStack(stack, vScale, false);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[axis][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = me._data;\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, me);\n        const meta = me._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._syncList = [];\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = me.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const data = me._data;\n    const elements = me._cachedMeta.data;\n    for (const [method, arg1, arg2] of me._syncList) {\n      me[method](arg1, arg2);\n    }\n    me._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._syncList.push(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._syncList.push(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._syncList.push(['_removeElements', start, count]);\n    this._syncList.push(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._syncList.push(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = me.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (me.index === stack._top || me.index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = me.resolveDatasetElementOptions(mode);\n    if (!me.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = me.options.segment;\n    me.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? me.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      properties.parsed = parsed;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(layout.pos)) {\n    if (layout.size) {\n      chartArea[layout.pos] -= layout.size;\n    }\n    layout.size = layout.horizontal ? box.height : box.width;\n    chartArea[layout.pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options.setContext(me.getContext());\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._range = _addGrace(me, me.options.grace);\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n    for (i = 0; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + hTickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = me._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = me._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right + padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const me = this;\n    const {chart, ctx, options: {grid}} = me;\n    const borderOpts = grid.setContext(me.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(me.getContext(0)).lineWidth;\n    const borderValue = me._borderValue;\n    let x1, x2, y1, y2;\n    if (me.isHorizontal()) {\n      x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawBorder();\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw() {\n        me.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const me = this;\n    const fontSize = me._resolveTickFontOptions(0).lineHeight;\n    return (me.isHorizontal() ? me.width : me.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = filter ? me._descriptors(chart).filter(filter) : me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.3.2\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    if (!retinaScale(me, newRatio, true)) {\n      return;\n    }\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(me._listeners));\n    const newEvents = new Set(me.options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== me.options.responsive) {\n      me.unbindEvents();\n      me.bindEvents();\n    }\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    const me = this;\n    if (!me._responsiveListeners) {\n      me._responsiveListeners = {};\n    }\n    const listeners = me._responsiveListeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (me.canvas) {\n        me.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      me.attached = true;\n      me.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      me.attached = false;\n      _remove('resize', listener);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(me.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    each(me._listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._listeners = {};\n    each(me._responsiveListeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n    me._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.type);\n    if (me.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n      callback(options.onHover, [e, active, me], me);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + offset + pixelMargin : 0;\n  const alpha = end - start;\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset;\n  const endAngle = end - angleOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const {options, circumference} = me;\n    const offset = (options.offset || 0) / 2;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (me.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, me, radiusOffset);\n    drawBorder(ctx, me, radiusOffset, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && line.segments.length === 1) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const me = this;\n    const options = me.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop, indexAxis);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, me, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    draw(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  enableBorderRadius: true,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      if (count <= 4 * availableWidth) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin),\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: me._maxDigits(),\n      horizontal: me.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = me._range || me;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    const horizontal = me.isHorizontal();\n    const length = horizontal ? me.width : me.height;\n    const minRotation = toRadians(me.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], me) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"]},"metadata":{},"sourceType":"module"}