{"ast":null,"code":"var forOwn = require('./forOwn');\n\nvar isPlainObject = require('../lang/isPlainObject');\n/**\n * Mixes objects into the target object, recursively mixing existing child\n * objects.\n */\n\n\nfunction deepMixIn(target, objects) {\n  var i = 0,\n      n = arguments.length,\n      obj;\n\n  while (++i < n) {\n    obj = arguments[i];\n\n    if (obj) {\n      forOwn(obj, copyProp, target);\n    }\n  }\n\n  return target;\n}\n\nfunction copyProp(val, key) {\n  var existing = this[key];\n\n  if (isPlainObject(val) && isPlainObject(existing)) {\n    deepMixIn(existing, val);\n  } else {\n    this[key] = val;\n  }\n}\n\nmodule.exports = deepMixIn;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Projects/Expense-Tracker/node_modules/mout/object/deepMixIn.js"],"names":["forOwn","require","isPlainObject","deepMixIn","target","objects","i","n","arguments","length","obj","copyProp","val","key","existing","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,uBAAD,CAA3B;AAEI;AACJ;AACA;AACA;;;AACI,SAASE,SAAT,CAAmBC,MAAnB,EAA2BC,OAA3B,EAAoC;AAChC,MAAIC,CAAC,GAAG,CAAR;AAAA,MACIC,CAAC,GAAGC,SAAS,CAACC,MADlB;AAAA,MAEIC,GAFJ;;AAIA,SAAM,EAAEJ,CAAF,GAAMC,CAAZ,EAAc;AACVG,IAAAA,GAAG,GAAGF,SAAS,CAACF,CAAD,CAAf;;AACA,QAAII,GAAJ,EAAS;AACLV,MAAAA,MAAM,CAACU,GAAD,EAAMC,QAAN,EAAgBP,MAAhB,CAAN;AACH;AACJ;;AAED,SAAOA,MAAP;AACH;;AAED,SAASO,QAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4B;AACxB,MAAIC,QAAQ,GAAG,KAAKD,GAAL,CAAf;;AACA,MAAIX,aAAa,CAACU,GAAD,CAAb,IAAsBV,aAAa,CAACY,QAAD,CAAvC,EAAmD;AAC/CX,IAAAA,SAAS,CAACW,QAAD,EAAWF,GAAX,CAAT;AACH,GAFD,MAEO;AACH,SAAKC,GAAL,IAAYD,GAAZ;AACH;AACJ;;AAEDG,MAAM,CAACC,OAAP,GAAiBb,SAAjB","sourcesContent":["var forOwn = require('./forOwn');\nvar isPlainObject = require('../lang/isPlainObject');\n\n    /**\n     * Mixes objects into the target object, recursively mixing existing child\n     * objects.\n     */\n    function deepMixIn(target, objects) {\n        var i = 0,\n            n = arguments.length,\n            obj;\n\n        while(++i < n){\n            obj = arguments[i];\n            if (obj) {\n                forOwn(obj, copyProp, target);\n            }\n        }\n\n        return target;\n    }\n\n    function copyProp(val, key) {\n        var existing = this[key];\n        if (isPlainObject(val) && isPlainObject(existing)) {\n            deepMixIn(existing, val);\n        } else {\n            this[key] = val;\n        }\n    }\n\n    module.exports = deepMixIn;\n\n\n"]},"metadata":{},"sourceType":"script"}