{"ast":null,"code":"var makeIterator = require('../function/makeIterator_');\n/**\n * Return minimum value inside array\n */\n\n\nfunction min(arr, iterator, thisObj) {\n  if (arr == null || !arr.length) {\n    return -Infinity;\n  } else if (arr.length && !iterator) {\n    return Math.min.apply(Math, arr);\n  } else {\n    iterator = makeIterator(iterator, thisObj);\n    var result,\n        compare = Infinity,\n        value,\n        temp;\n    var i = -1,\n        len = arr.length;\n\n    while (++i < len) {\n      value = arr[i];\n      temp = iterator(value, i, arr);\n\n      if (temp < compare) {\n        compare = temp;\n        result = value;\n      }\n    }\n\n    return result;\n  }\n}\n\nmodule.exports = min;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Projects/Expense-Tracker/node_modules/mout/array/min.js"],"names":["makeIterator","require","min","arr","iterator","thisObj","length","Infinity","Math","apply","result","compare","value","temp","i","len","module","exports"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,2BAAD,CAA1B;AAEI;AACJ;AACA;;;AACI,SAASC,GAAT,CAAaC,GAAb,EAAkBC,QAAlB,EAA4BC,OAA5B,EAAoC;AAChC,MAAIF,GAAG,IAAI,IAAP,IAAe,CAACA,GAAG,CAACG,MAAxB,EAAgC;AAC5B,WAAO,CAACC,QAAR;AACH,GAFD,MAEO,IAAIJ,GAAG,CAACG,MAAJ,IAAc,CAACF,QAAnB,EAA6B;AAChC,WAAOI,IAAI,CAACN,GAAL,CAASO,KAAT,CAAeD,IAAf,EAAqBL,GAArB,CAAP;AACH,GAFM,MAEA;AACHC,IAAAA,QAAQ,GAAGJ,YAAY,CAACI,QAAD,EAAWC,OAAX,CAAvB;AACA,QAAIK,MAAJ;AAAA,QACIC,OAAO,GAAGJ,QADd;AAAA,QAEIK,KAFJ;AAAA,QAGIC,IAHJ;AAKA,QAAIC,CAAC,GAAG,CAAC,CAAT;AAAA,QAAYC,GAAG,GAAGZ,GAAG,CAACG,MAAtB;;AACA,WAAO,EAAEQ,CAAF,GAAMC,GAAb,EAAkB;AACdH,MAAAA,KAAK,GAAGT,GAAG,CAACW,CAAD,CAAX;AACAD,MAAAA,IAAI,GAAGT,QAAQ,CAACQ,KAAD,EAAQE,CAAR,EAAWX,GAAX,CAAf;;AACA,UAAIU,IAAI,GAAGF,OAAX,EAAoB;AAChBA,QAAAA,OAAO,GAAGE,IAAV;AACAH,QAAAA,MAAM,GAAGE,KAAT;AACH;AACJ;;AAED,WAAOF,MAAP;AACH;AACJ;;AAEDM,MAAM,CAACC,OAAP,GAAiBf,GAAjB","sourcesContent":["var makeIterator = require('../function/makeIterator_');\n\n    /**\n     * Return minimum value inside array\n     */\n    function min(arr, iterator, thisObj){\n        if (arr == null || !arr.length) {\n            return -Infinity;\n        } else if (arr.length && !iterator) {\n            return Math.min.apply(Math, arr);\n        } else {\n            iterator = makeIterator(iterator, thisObj);\n            var result,\n                compare = Infinity,\n                value,\n                temp;\n\n            var i = -1, len = arr.length;\n            while (++i < len) {\n                value = arr[i];\n                temp = iterator(value, i, arr);\n                if (temp < compare) {\n                    compare = temp;\n                    result = value;\n                }\n            }\n\n            return result;\n        }\n    }\n\n    module.exports = min;\n\n\n"]},"metadata":{},"sourceType":"script"}