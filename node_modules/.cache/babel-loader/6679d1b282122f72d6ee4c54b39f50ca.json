{"ast":null,"code":"var identity = require('./identity');\n\nvar prop = require('./prop');\n\nvar deepMatches = require('../object/deepMatches');\n/**\n * Converts argument into a valid iterator.\n * Used internally on most array/object/collection methods that receives a\n * callback/iterator providing a shortcut syntax.\n */\n\n\nfunction makeIterator(src, thisObj) {\n  if (src == null) {\n    return identity;\n  }\n\n  switch (typeof src) {\n    case 'function':\n      // function is the first to improve perf (most common case)\n      // also avoid using `Function#call` if not needed, which boosts\n      // perf a lot in some cases\n      return typeof thisObj !== 'undefined' ? function (val, i, arr) {\n        return src.call(thisObj, val, i, arr);\n      } : src;\n\n    case 'object':\n      return function (val) {\n        return deepMatches(val, src);\n      };\n\n    case 'string':\n    case 'number':\n      return prop(src);\n  }\n}\n\nmodule.exports = makeIterator;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Projects/Expense-Tracker/node_modules/mout/function/makeIterator_.js"],"names":["identity","require","prop","deepMatches","makeIterator","src","thisObj","val","i","arr","call","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,uBAAD,CAAzB;AAEI;AACJ;AACA;AACA;AACA;;;AACI,SAASG,YAAT,CAAsBC,GAAtB,EAA2BC,OAA3B,EAAmC;AAC/B,MAAID,GAAG,IAAI,IAAX,EAAiB;AACb,WAAOL,QAAP;AACH;;AACD,UAAO,OAAOK,GAAd;AACI,SAAK,UAAL;AACI;AACA;AACA;AACA,aAAQ,OAAOC,OAAP,KAAmB,WAApB,GAAkC,UAASC,GAAT,EAAcC,CAAd,EAAiBC,GAAjB,EAAqB;AAC1D,eAAOJ,GAAG,CAACK,IAAJ,CAASJ,OAAT,EAAkBC,GAAlB,EAAuBC,CAAvB,EAA0BC,GAA1B,CAAP;AACH,OAFM,GAEHJ,GAFJ;;AAGJ,SAAK,QAAL;AACI,aAAO,UAASE,GAAT,EAAa;AAChB,eAAOJ,WAAW,CAACI,GAAD,EAAMF,GAAN,CAAlB;AACH,OAFD;;AAGJ,SAAK,QAAL;AACA,SAAK,QAAL;AACI,aAAOH,IAAI,CAACG,GAAD,CAAX;AAdR;AAgBH;;AAEDM,MAAM,CAACC,OAAP,GAAiBR,YAAjB","sourcesContent":["var identity = require('./identity');\nvar prop = require('./prop');\nvar deepMatches = require('../object/deepMatches');\n\n    /**\n     * Converts argument into a valid iterator.\n     * Used internally on most array/object/collection methods that receives a\n     * callback/iterator providing a shortcut syntax.\n     */\n    function makeIterator(src, thisObj){\n        if (src == null) {\n            return identity;\n        }\n        switch(typeof src) {\n            case 'function':\n                // function is the first to improve perf (most common case)\n                // also avoid using `Function#call` if not needed, which boosts\n                // perf a lot in some cases\n                return (typeof thisObj !== 'undefined')? function(val, i, arr){\n                    return src.call(thisObj, val, i, arr);\n                } : src;\n            case 'object':\n                return function(val){\n                    return deepMatches(val, src);\n                };\n            case 'string':\n            case 'number':\n                return prop(src);\n        }\n    }\n\n    module.exports = makeIterator;\n\n\n"]},"metadata":{},"sourceType":"script"}