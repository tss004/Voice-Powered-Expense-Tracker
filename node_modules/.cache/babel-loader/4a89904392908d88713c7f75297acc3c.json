{"ast":null,"code":"var forOwn = require('./forOwn');\n\nvar isArray = require('../lang/isArray');\n\nfunction containsMatch(array, pattern) {\n  var i = -1,\n      length = array.length;\n\n  while (++i < length) {\n    if (deepMatches(array[i], pattern)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction matchArray(target, pattern) {\n  var i = -1,\n      patternLength = pattern.length;\n\n  while (++i < patternLength) {\n    if (!containsMatch(target, pattern[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction matchObject(target, pattern) {\n  var result = true;\n  forOwn(pattern, function (val, key) {\n    if (!deepMatches(target[key], val)) {\n      // Return false to break out of forOwn early\n      return result = false;\n    }\n  });\n  return result;\n}\n/**\n * Recursively check if the objects match.\n */\n\n\nfunction deepMatches(target, pattern) {\n  if (target && typeof target === 'object') {\n    if (isArray(target) && isArray(pattern)) {\n      return matchArray(target, pattern);\n    } else {\n      return matchObject(target, pattern);\n    }\n  } else {\n    return target === pattern;\n  }\n}\n\nmodule.exports = deepMatches;","map":{"version":3,"sources":["C:/Users/hp/Desktop/expensetracker/node_modules/mout/object/deepMatches.js"],"names":["forOwn","require","isArray","containsMatch","array","pattern","i","length","deepMatches","matchArray","target","patternLength","matchObject","result","val","key","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,iBAAD,CAArB;;AAEI,SAASE,aAAT,CAAuBC,KAAvB,EAA8BC,OAA9B,EAAuC;AACnC,MAAIC,CAAC,GAAG,CAAC,CAAT;AAAA,MAAYC,MAAM,GAAGH,KAAK,CAACG,MAA3B;;AACA,SAAO,EAAED,CAAF,GAAMC,MAAb,EAAqB;AACjB,QAAIC,WAAW,CAACJ,KAAK,CAACE,CAAD,CAAN,EAAWD,OAAX,CAAf,EAAoC;AAChC,aAAO,IAAP;AACH;AACJ;;AAED,SAAO,KAAP;AACH;;AAED,SAASI,UAAT,CAAoBC,MAApB,EAA4BL,OAA5B,EAAqC;AACjC,MAAIC,CAAC,GAAG,CAAC,CAAT;AAAA,MAAYK,aAAa,GAAGN,OAAO,CAACE,MAApC;;AACA,SAAO,EAAED,CAAF,GAAMK,aAAb,EAA4B;AACxB,QAAI,CAACR,aAAa,CAACO,MAAD,EAASL,OAAO,CAACC,CAAD,CAAhB,CAAlB,EAAwC;AACpC,aAAO,KAAP;AACH;AACJ;;AAED,SAAO,IAAP;AACH;;AAED,SAASM,WAAT,CAAqBF,MAArB,EAA6BL,OAA7B,EAAsC;AAClC,MAAIQ,MAAM,GAAG,IAAb;AACAb,EAAAA,MAAM,CAACK,OAAD,EAAU,UAASS,GAAT,EAAcC,GAAd,EAAmB;AAC/B,QAAI,CAACP,WAAW,CAACE,MAAM,CAACK,GAAD,CAAP,EAAcD,GAAd,CAAhB,EAAoC;AAChC;AACA,aAAQD,MAAM,GAAG,KAAjB;AACH;AACJ,GALK,CAAN;AAOA,SAAOA,MAAP;AACH;AAED;AACJ;AACA;;;AACI,SAASL,WAAT,CAAqBE,MAArB,EAA6BL,OAA7B,EAAqC;AACjC,MAAIK,MAAM,IAAI,OAAOA,MAAP,KAAkB,QAAhC,EAA0C;AACtC,QAAIR,OAAO,CAACQ,MAAD,CAAP,IAAmBR,OAAO,CAACG,OAAD,CAA9B,EAAyC;AACrC,aAAOI,UAAU,CAACC,MAAD,EAASL,OAAT,CAAjB;AACH,KAFD,MAEO;AACH,aAAOO,WAAW,CAACF,MAAD,EAASL,OAAT,CAAlB;AACH;AACJ,GAND,MAMO;AACH,WAAOK,MAAM,KAAKL,OAAlB;AACH;AACJ;;AAEDW,MAAM,CAACC,OAAP,GAAiBT,WAAjB","sourcesContent":["var forOwn = require('./forOwn');\nvar isArray = require('../lang/isArray');\n\n    function containsMatch(array, pattern) {\n        var i = -1, length = array.length;\n        while (++i < length) {\n            if (deepMatches(array[i], pattern)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function matchArray(target, pattern) {\n        var i = -1, patternLength = pattern.length;\n        while (++i < patternLength) {\n            if (!containsMatch(target, pattern[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function matchObject(target, pattern) {\n        var result = true;\n        forOwn(pattern, function(val, key) {\n            if (!deepMatches(target[key], val)) {\n                // Return false to break out of forOwn early\n                return (result = false);\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Recursively check if the objects match.\n     */\n    function deepMatches(target, pattern){\n        if (target && typeof target === 'object') {\n            if (isArray(target) && isArray(pattern)) {\n                return matchArray(target, pattern);\n            } else {\n                return matchObject(target, pattern);\n            }\n        } else {\n            return target === pattern;\n        }\n    }\n\n    module.exports = deepMatches;\n\n\n"]},"metadata":{},"sourceType":"script"}