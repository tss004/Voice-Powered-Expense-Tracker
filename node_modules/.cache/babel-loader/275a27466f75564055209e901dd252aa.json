{"ast":null,"code":"import _classCallCheck from \"C:/Users/hp/Desktop/Projects/Expense-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/hp/Desktop/Projects/Expense-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport LanguageCode from 'iso-639-1-zh';\nimport CountryCode from 'iso-3166-1-alpha-2';\nvar REG = /^([a-z]{2})-([A-Z]{2})$/;\n\nvar LocaleCode = /*#__PURE__*/function () {\n  function LocaleCode() {\n    _classCallCheck(this, LocaleCode);\n  }\n\n  _createClass(LocaleCode, null, [{\n    key: \"getLanguageCode\",\n    value:\n    /* language iso-639-1 */\n    function getLanguageCode(code) {\n      var match = code.match(REG);\n      if (!match || match.length < 1) return '';\n      return match[1];\n    }\n  }, {\n    key: \"getLanguageName\",\n    value: function getLanguageName(code) {\n      var languageCode = LocaleCode.getLanguageCode(code);\n      return LanguageCode.getName(languageCode);\n    }\n  }, {\n    key: \"getLanguageNativeName\",\n    value: function getLanguageNativeName(code) {\n      var languageCode = LocaleCode.getLanguageCode(code);\n      return LanguageCode.getNativeName(languageCode);\n    }\n  }, {\n    key: \"getLanguageZhName\",\n    value: function getLanguageZhName(code) {\n      var languageCode = LocaleCode.getLanguageCode(code);\n      return LanguageCode.getZhName(languageCode);\n    }\n  }, {\n    key: \"validateLanguageCode\",\n    value: function validateLanguageCode(code) {\n      var languageCode = LocaleCode.getLanguageCode(code);\n      return LanguageCode.validate(languageCode);\n    }\n  }, {\n    key: \"getLanguages\",\n    value: function getLanguages(codes) {\n      var list = [];\n\n      for (var i = 0; i < codes.length; i++) {\n        list.push({\n          code: codes[i],\n          name: LocaleCode.getLanguageName(codes[i]),\n          nativeName: LocaleCode.getLanguageNativeName(codes[i]),\n          zhName: LocaleCode.getLanguageZhName(codes[i])\n        });\n      }\n\n      return list;\n    }\n    /* country iso-3166-1-alpha-2 */\n\n  }, {\n    key: \"getCountryCode\",\n    value: function getCountryCode(code) {\n      var match = code.match(REG);\n      if (!match || match.length < 2) return '';\n      return match[2];\n    }\n  }, {\n    key: \"getCountryName\",\n    value: function getCountryName(code) {\n      var countryCode = LocaleCode.getCountryCode(code);\n      return CountryCode.getCountry(countryCode);\n    }\n  }, {\n    key: \"validateCountryCode\",\n    value: function validateCountryCode(code) {\n      code = LocaleCode.getCountryCode(code);\n\n      if (CountryCode.getCodes().indexOf(code) === -1) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n    /* validate */\n\n  }, {\n    key: \"validate\",\n    value: function validate(code) {\n      var match = code.match(REG);\n\n      if (match && match.length === 3 && LocaleCode.validateLanguageCode(code) && LocaleCode.validateCountryCode(code)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return LocaleCode;\n}();\n\nexport { LocaleCode as default };","map":{"version":3,"sources":["C:/Users/hp/Desktop/Projects/Expense-Tracker/node_modules/locale-code/src/index.js"],"names":["LanguageCode","CountryCode","REG","LocaleCode","code","match","length","languageCode","getLanguageCode","getName","getNativeName","getZhName","validate","codes","list","i","push","name","getLanguageName","nativeName","getLanguageNativeName","zhName","getLanguageZhName","countryCode","getCountryCode","getCountry","getCodes","indexOf","validateLanguageCode","validateCountryCode"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,cAAzB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,IAAMC,GAAG,GAAG,yBAAZ;;IAEqBC,U;;;;;;;;AACnB;AACA,6BAAuBC,IAAvB,EAA6B;AAC3B,UAAIC,KAAK,GAAGD,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAZ;AACA,UAAG,CAACG,KAAD,IAAUA,KAAK,CAACC,MAAN,GAAe,CAA5B,EAA+B,OAAO,EAAP;AAC/B,aAAOD,KAAK,CAAC,CAAD,CAAZ;AACD;;;WAED,yBAAuBD,IAAvB,EAA6B;AAC3B,UAAIG,YAAY,GAAGJ,UAAU,CAACK,eAAX,CAA2BJ,IAA3B,CAAnB;AACA,aAAOJ,YAAY,CAACS,OAAb,CAAqBF,YAArB,CAAP;AACD;;;WAED,+BAA6BH,IAA7B,EAAmC;AACjC,UAAIG,YAAY,GAAGJ,UAAU,CAACK,eAAX,CAA2BJ,IAA3B,CAAnB;AACA,aAAOJ,YAAY,CAACU,aAAb,CAA2BH,YAA3B,CAAP;AACD;;;WAED,2BAAyBH,IAAzB,EAA+B;AAC7B,UAAIG,YAAY,GAAGJ,UAAU,CAACK,eAAX,CAA2BJ,IAA3B,CAAnB;AACA,aAAOJ,YAAY,CAACW,SAAb,CAAuBJ,YAAvB,CAAP;AACD;;;WAED,8BAA4BH,IAA5B,EAAkC;AAChC,UAAIG,YAAY,GAAGJ,UAAU,CAACK,eAAX,CAA2BJ,IAA3B,CAAnB;AACA,aAAOJ,YAAY,CAACY,QAAb,CAAsBL,YAAtB,CAAP;AACD;;;WAED,sBAAoBM,KAApB,EAA2B;AACzB,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACP,MAA1B,EAAkCS,CAAC,EAAnC,EAAuC;AACrCD,QAAAA,IAAI,CAACE,IAAL,CAAU;AACRZ,UAAAA,IAAI,EAACS,KAAK,CAACE,CAAD,CADF;AAERE,UAAAA,IAAI,EAAEd,UAAU,CAACe,eAAX,CAA2BL,KAAK,CAACE,CAAD,CAAhC,CAFE;AAGRI,UAAAA,UAAU,EAAEhB,UAAU,CAACiB,qBAAX,CAAiCP,KAAK,CAACE,CAAD,CAAtC,CAHJ;AAIRM,UAAAA,MAAM,EAAElB,UAAU,CAACmB,iBAAX,CAA6BT,KAAK,CAACE,CAAD,CAAlC;AAJA,SAAV;AAMD;;AACD,aAAOD,IAAP;AACD;AAED;;;;WACA,wBAAsBV,IAAtB,EAA4B;AAC1B,UAAIC,KAAK,GAAGD,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAZ;AACA,UAAG,CAACG,KAAD,IAAUA,KAAK,CAACC,MAAN,GAAe,CAA5B,EAA+B,OAAO,EAAP;AAC/B,aAAOD,KAAK,CAAC,CAAD,CAAZ;AACD;;;WACD,wBAAsBD,IAAtB,EAA4B;AAC1B,UAAImB,WAAW,GAAGpB,UAAU,CAACqB,cAAX,CAA0BpB,IAA1B,CAAlB;AACA,aAAOH,WAAW,CAACwB,UAAZ,CAAuBF,WAAvB,CAAP;AACD;;;WACD,6BAA2BnB,IAA3B,EAAiC;AAC/BA,MAAAA,IAAI,GAAGD,UAAU,CAACqB,cAAX,CAA0BpB,IAA1B,CAAP;;AACA,UAAGH,WAAW,CAACyB,QAAZ,GAAuBC,OAAvB,CAA+BvB,IAA/B,MAAyC,CAAC,CAA7C,EAAgD;AAC9C,eAAO,KAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF;AAED;;;;WACA,kBAAgBA,IAAhB,EAAsB;AACpB,UAAIC,KAAK,GAAGD,IAAI,CAACC,KAAL,CAAWH,GAAX,CAAZ;;AACA,UAAGG,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,CAA1B,IACDH,UAAU,CAACyB,oBAAX,CAAgCxB,IAAhC,CADC,IAEDD,UAAU,CAAC0B,mBAAX,CAA+BzB,IAA/B,CAFF,EAEwC;AACtC,eAAO,IAAP;AACD,OAJD,MAIO;AACL,eAAO,KAAP;AACD;AACF;;;;;;SAtEkBD,U","sourcesContent":["import LanguageCode from 'iso-639-1-zh'\nimport CountryCode from 'iso-3166-1-alpha-2'\n\nconst REG = /^([a-z]{2})-([A-Z]{2})$/\n\nexport default class LocaleCode {\n  /* language iso-639-1 */\n  static getLanguageCode(code) {\n    var match = code.match(REG)\n    if(!match || match.length < 1) return ''\n    return match[1]\n  }\n\n  static getLanguageName(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.getName(languageCode)\n  }\n\n  static getLanguageNativeName(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.getNativeName(languageCode)\n  }\n\n  static getLanguageZhName(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.getZhName(languageCode)\n  }\n\n  static validateLanguageCode(code) {\n    var languageCode = LocaleCode.getLanguageCode(code)\n    return LanguageCode.validate(languageCode)\n  }\n\n  static getLanguages(codes) {\n    var list = []\n    for (var i = 0; i < codes.length; i++) {\n      list.push({\n        code:codes[i], \n        name: LocaleCode.getLanguageName(codes[i]),\n        nativeName: LocaleCode.getLanguageNativeName(codes[i]),\n        zhName: LocaleCode.getLanguageZhName(codes[i])\n      })\n    }\n    return list\n  }\n\n  /* country iso-3166-1-alpha-2 */\n  static getCountryCode(code) {\n    var match = code.match(REG)\n    if(!match || match.length < 2) return ''\n    return match[2]\n  }\n  static getCountryName(code) {\n    var countryCode = LocaleCode.getCountryCode(code)\n    return CountryCode.getCountry(countryCode)\n  }\n  static validateCountryCode(code) {\n    code = LocaleCode.getCountryCode(code)\n    if(CountryCode.getCodes().indexOf(code) === -1) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /* validate */\n  static validate(code) {\n    var match = code.match(REG)\n    if(match && match.length === 3 && \n      LocaleCode.validateLanguageCode(code) &&\n      LocaleCode.validateCountryCode(code)) {\n      return true\n    } else {\n      return false\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}