{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{Grid}from'@material-ui/core';import{SpeechState,useSpeechContext}from\"@speechly/react-client\";import{PushToTalkButton,PushToTalkButtonContainer}from'@speechly/react-ui';import{Details,Main}from'./components';import useStyles from'./styles';import ButtonAppBar from'./components/ButtonAppBar/ButtonAppBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var classes=useStyles();var _useSpeechContext=useSpeechContext(),speechState=_useSpeechContext.speechState;var main=useRef(null);var executeScroll=function executeScroll(){return main.current.scrollIntoView();};useEffect(function(){if(speechState===SpeechState.Recording){executeScroll();}},[speechState]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(ButtonAppBar,{}),/*#__PURE__*/_jsxs(Grid,{className:classes.grid,container:true,spacing:0,alignItems:\"center\",justify:\"center\",style:{height:'100vh'},children:[/*#__PURE__*/_jsx(Grid,{ref:main,item:true,xs:12,sm:8,className:classes.main,children:/*#__PURE__*/_jsx(Main,{})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,className:classes.mobile,children:/*#__PURE__*/_jsx(Details,{title:\"Income\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,className:classes.desktop,children:/*#__PURE__*/_jsx(Details,{title:\"Income\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,className:classes.last,children:/*#__PURE__*/_jsx(Details,{title:\"Expense\"})}),/*#__PURE__*/_jsx(PushToTalkButtonContainer,{children:/*#__PURE__*/_jsx(PushToTalkButton,{})})]})]});};export default App;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Projects/Expense-Tracker/src/App.js"],"names":["React","useEffect","useRef","Grid","SpeechState","useSpeechContext","PushToTalkButton","PushToTalkButtonContainer","Details","Main","useStyles","ButtonAppBar","App","classes","speechState","main","executeScroll","current","scrollIntoView","Recording","grid","height","mobile","desktop","last"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,OAASC,IAAT,KAAqB,mBAArB,CAEA,OAASC,WAAT,CAAsBC,gBAAtB,KAA8C,wBAA9C,CACA,OAASC,gBAAT,CAA2BC,yBAA3B,KAA4D,oBAA5D,CACA,OAASC,OAAT,CAAkBC,IAAlB,KAA8B,cAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wCAAzB,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,GAAMC,CAAAA,OAAO,CAAGH,SAAS,EAAzB,CACA,sBAAwBL,gBAAgB,EAAxC,CAAQS,WAAR,mBAAQA,WAAR,CACA,GAAMC,CAAAA,IAAI,CAAGb,MAAM,CAAC,IAAD,CAAnB,CAEA,GAAMc,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAMD,CAAAA,IAAI,CAACE,OAAL,CAAaC,cAAb,EAAN,EAAtB,CAOAjB,SAAS,CAAC,UAAM,CACd,GAAIa,WAAW,GAAKV,WAAW,CAACe,SAAhC,CAA2C,CACzCH,aAAa,GACd,CACF,CAJQ,CAIN,CAACF,WAAD,CAJM,CAAT,CAMA,mBACE,oCAEE,KAAC,YAAD,IAFF,cAIE,MAAC,IAAD,EAAM,SAAS,CAAED,OAAO,CAACO,IAAzB,CAA+B,SAAS,KAAxC,CAAyC,OAAO,CAAE,CAAlD,CAAqD,UAAU,CAAC,QAAhE,CAAyE,OAAO,CAAC,QAAjF,CAA0F,KAAK,CAAE,CAAEC,MAAM,CAAE,OAAV,CAAjG,wBAEE,KAAC,IAAD,EAAM,GAAG,CAAEN,IAAX,CAAiB,IAAI,KAArB,CAAsB,EAAE,CAAE,EAA1B,CAA8B,EAAE,CAAE,CAAlC,CAAqC,SAAS,CAAEF,OAAO,CAACE,IAAxD,uBACE,KAAC,IAAD,IADF,EAFF,cAME,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,CAA0B,SAAS,CAAEF,OAAO,CAACS,MAA7C,uBACE,KAAC,OAAD,EAAS,KAAK,CAAC,QAAf,EADF,EANF,cAUE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,CAA0B,SAAS,CAAET,OAAO,CAACU,OAA7C,uBACE,KAAC,OAAD,EAAS,KAAK,CAAC,QAAf,EADF,EAVF,cAaE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,CAA0B,SAAS,CAAEV,OAAO,CAACW,IAA7C,uBACE,KAAC,OAAD,EAAS,KAAK,CAAC,SAAf,EADF,EAbF,cAgBE,KAAC,yBAAD,wBACE,KAAC,gBAAD,IADF,EAhBF,GAJF,GADF,CA2BD,CA7CD,CA+CA,cAAeZ,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\r\nimport { PushToTalkButton, PushToTalkButtonContainer } from '@speechly/react-ui';\r\nimport { Details, Main } from './components';\r\nimport useStyles from './styles';\r\nimport ButtonAppBar from './components/ButtonAppBar/ButtonAppBar';\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const { speechState } = useSpeechContext();\r\n  const main = useRef(null)\r\n\r\n  const executeScroll = () => main.current.scrollIntoView()\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (speechState === SpeechState.Recording) {\r\n      executeScroll();\r\n    }\r\n  }, [speechState]);\r\n\r\n  return (\r\n    <div>\r\n\r\n      <ButtonAppBar />\r\n\r\n      <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justify=\"center\" style={{ height: '100vh' }}>\r\n\r\n        <Grid ref={main} item xs={12} sm={8} className={classes.main}>\r\n          <Main />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4} className={classes.mobile}>\r\n          <Details title=\"Income\" />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4} className={classes.desktop}>\r\n          <Details title=\"Income\" />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} className={classes.last}>\r\n          <Details title=\"Expense\" />\r\n        </Grid>\r\n        <PushToTalkButtonContainer>\r\n          <PushToTalkButton />\r\n        </PushToTalkButtonContainer>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}