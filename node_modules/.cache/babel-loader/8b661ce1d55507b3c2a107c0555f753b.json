{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\expensetracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\nimport { PushToTalkButton, PushToTalkButtonContainer } from '@speechly/react-ui';\nimport { Details, Main } from './components';\nimport useStyles from './styles';\nimport Appbar from './components/Appbar/Appbar';\n\nconst App = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    speechState\n  } = useSpeechContext();\n  const main = useRef(null);\n\n  const executeScroll = () => main.current.scrollIntoView();\n\n  useEffect(() => {\n    if (speechState === SpeechState.Recording) {\n      executeScroll();\n    }\n  }, [speechState]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Appbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.grid,\n    container: true,\n    spacing: 0,\n    alignItems: \"center\",\n    justify: \"center\",\n    style: {\n      height: '100vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    ref: main,\n    item: true,\n    xs: 12,\n    sm: 8,\n    className: classes.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    className: classes.mobile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Details, {\n    title: \"Income\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    className: classes.desktop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Details, {\n    title: \"Income\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    className: classes.last,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Details, {\n    title: \"Expense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(PushToTalkButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PushToTalkButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(App, \"3iwpdSlF/5+lQ9uVcqezbduyhz0=\", false, function () {\n  return [useStyles, useSpeechContext];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/hp/Desktop/expensetracker/src/App.js"],"names":["React","useEffect","useRef","Grid","SpeechState","useSpeechContext","PushToTalkButton","PushToTalkButtonContainer","Details","Main","useStyles","Appbar","App","classes","speechState","main","executeScroll","current","scrollIntoView","Recording","grid","height","mobile","desktop","last"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\r\nimport { PushToTalkButton, PushToTalkButtonContainer } from '@speechly/react-ui';\r\nimport { Details, Main } from './components';\r\nimport useStyles from './styles';\r\nimport Appbar from './components/Appbar/Appbar';\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const { speechState } = useSpeechContext();\r\n  const main = useRef(null)\r\n\r\n  const executeScroll = () => main.current.scrollIntoView()\r\n  \r\n\r\n\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    if (speechState === SpeechState.Recording) {\r\n      executeScroll();\r\n    }\r\n  }, [speechState]);\r\n\r\n  return (\r\n    <div>\r\n      <Appbar/>\r\n      <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justify=\"center\" style={{ height: '100vh'}}>\r\n        \r\n      <Grid ref={main} item xs={12} sm={8} className={classes.main}>\r\n          <Main />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} sm={4} className={classes.mobile}>\r\n          <Details title=\"Income\" />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} sm={4} className={classes.desktop}>\r\n          <Details title=\"Income\" />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} className={classes.last}>\r\n          <Details title=\"Expense\" />\r\n        </Grid>\r\n        <PushToTalkButtonContainer>\r\n          <PushToTalkButton />\r\n        </PushToTalkButtonContainer>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}