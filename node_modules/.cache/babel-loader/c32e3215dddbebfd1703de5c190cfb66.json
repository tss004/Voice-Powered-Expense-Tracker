{"ast":null,"code":"var hasOwn = require('./hasOwn');\n\nvar deepClone = require('../lang/deepClone');\n\nvar isObject = require('../lang/isObject');\n/**\n * Deep merge objects.\n */\n\n\nfunction merge() {\n  var i = 1,\n      key,\n      val,\n      obj,\n      target; // make sure we don't modify source element and it's properties\n  // objects are passed by reference\n\n  target = deepClone(arguments[0]);\n\n  while (obj = arguments[i++]) {\n    for (key in obj) {\n      if (!hasOwn(obj, key)) {\n        continue;\n      }\n\n      val = obj[key];\n\n      if (isObject(val) && isObject(target[key])) {\n        // inception, deep merge objects\n        target[key] = merge(target[key], val);\n      } else {\n        // make sure arrays, regexp, date, objects are cloned\n        target[key] = deepClone(val);\n      }\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = merge;","map":{"version":3,"sources":["C:/Users/hp/Desktop/expensetracker/node_modules/mout/object/merge.js"],"names":["hasOwn","require","deepClone","isObject","merge","i","key","val","obj","target","arguments","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAvB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,kBAAD,CAAtB;AAEI;AACJ;AACA;;;AACI,SAASG,KAAT,GAAiB;AACb,MAAIC,CAAC,GAAG,CAAR;AAAA,MACIC,GADJ;AAAA,MACSC,GADT;AAAA,MACcC,GADd;AAAA,MACmBC,MADnB,CADa,CAIb;AACA;;AACAA,EAAAA,MAAM,GAAGP,SAAS,CAAEQ,SAAS,CAAC,CAAD,CAAX,CAAlB;;AAEA,SAAOF,GAAG,GAAGE,SAAS,CAACL,CAAC,EAAF,CAAtB,EAA6B;AACzB,SAAKC,GAAL,IAAYE,GAAZ,EAAiB;AACb,UAAK,CAAER,MAAM,CAACQ,GAAD,EAAMF,GAAN,CAAb,EAA0B;AACtB;AACH;;AAEDC,MAAAA,GAAG,GAAGC,GAAG,CAACF,GAAD,CAAT;;AAEA,UAAKH,QAAQ,CAACI,GAAD,CAAR,IAAiBJ,QAAQ,CAACM,MAAM,CAACH,GAAD,CAAP,CAA9B,EAA6C;AACzC;AACAG,QAAAA,MAAM,CAACH,GAAD,CAAN,GAAcF,KAAK,CAACK,MAAM,CAACH,GAAD,CAAP,EAAcC,GAAd,CAAnB;AACH,OAHD,MAGO;AACH;AACAE,QAAAA,MAAM,CAACH,GAAD,CAAN,GAAcJ,SAAS,CAACK,GAAD,CAAvB;AACH;AAEJ;AACJ;;AAED,SAAOE,MAAP;AACH;;AAEDE,MAAM,CAACC,OAAP,GAAiBR,KAAjB","sourcesContent":["var hasOwn = require('./hasOwn');\nvar deepClone = require('../lang/deepClone');\nvar isObject = require('../lang/isObject');\n\n    /**\n     * Deep merge objects.\n     */\n    function merge() {\n        var i = 1,\n            key, val, obj, target;\n\n        // make sure we don't modify source element and it's properties\n        // objects are passed by reference\n        target = deepClone( arguments[0] );\n\n        while (obj = arguments[i++]) {\n            for (key in obj) {\n                if ( ! hasOwn(obj, key) ) {\n                    continue;\n                }\n\n                val = obj[key];\n\n                if ( isObject(val) && isObject(target[key]) ){\n                    // inception, deep merge objects\n                    target[key] = merge(target[key], val);\n                } else {\n                    // make sure arrays, regexp, date, objects are cloned\n                    target[key] = deepClone(val);\n                }\n\n            }\n        }\n\n        return target;\n    }\n\n    module.exports = merge;\n\n\n"]},"metadata":{},"sourceType":"script"}