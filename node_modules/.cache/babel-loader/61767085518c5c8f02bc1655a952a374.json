{"ast":null,"code":"var forOwn = require('./forOwn');\n\nvar isPlainObject = require('../lang/isPlainObject');\n/*\n * Helper function to flatten to a destination object.\n * Used to remove the need to create intermediate objects while flattening.\n */\n\n\nfunction flattenTo(obj, result, prefix, level) {\n  forOwn(obj, function (value, key) {\n    var nestedPrefix = prefix ? prefix + '.' + key : key;\n\n    if (level !== 0 && isPlainObject(value)) {\n      flattenTo(value, result, nestedPrefix, level - 1);\n    } else {\n      result[nestedPrefix] = value;\n    }\n  });\n  return result;\n}\n/**\n * Recursively flattens an object.\n * A new object containing all the elements is returned.\n * If level is specified, it will only flatten up to that level.\n */\n\n\nfunction flatten(obj, level) {\n  if (obj == null) {\n    return {};\n  }\n\n  level = level == null ? -1 : level;\n  return flattenTo(obj, {}, '', level);\n}\n\nmodule.exports = flatten;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Projects/Expense-Tracker/node_modules/mout/object/flatten.js"],"names":["forOwn","require","isPlainObject","flattenTo","obj","result","prefix","level","value","key","nestedPrefix","flatten","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,uBAAD,CAA3B;AAEI;AACJ;AACA;AACA;;;AACI,SAASE,SAAT,CAAmBC,GAAnB,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCC,KAAxC,EAA+C;AAC3CP,EAAAA,MAAM,CAACI,GAAD,EAAM,UAAUI,KAAV,EAAiBC,GAAjB,EAAsB;AAC9B,QAAIC,YAAY,GAAGJ,MAAM,GAAGA,MAAM,GAAG,GAAT,GAAeG,GAAlB,GAAwBA,GAAjD;;AAEA,QAAIF,KAAK,KAAK,CAAV,IAAeL,aAAa,CAACM,KAAD,CAAhC,EAAyC;AACrCL,MAAAA,SAAS,CAACK,KAAD,EAAQH,MAAR,EAAgBK,YAAhB,EAA8BH,KAAK,GAAG,CAAtC,CAAT;AACH,KAFD,MAEO;AACHF,MAAAA,MAAM,CAACK,YAAD,CAAN,GAAuBF,KAAvB;AACH;AACJ,GARK,CAAN;AAUA,SAAOH,MAAP;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACI,SAASM,OAAT,CAAiBP,GAAjB,EAAsBG,KAAtB,EAA6B;AACzB,MAAIH,GAAG,IAAI,IAAX,EAAiB;AACb,WAAO,EAAP;AACH;;AAEDG,EAAAA,KAAK,GAAGA,KAAK,IAAI,IAAT,GAAgB,CAAC,CAAjB,GAAqBA,KAA7B;AACA,SAAOJ,SAAS,CAACC,GAAD,EAAM,EAAN,EAAU,EAAV,EAAcG,KAAd,CAAhB;AACH;;AAEDK,MAAM,CAACC,OAAP,GAAiBF,OAAjB","sourcesContent":["var forOwn = require('./forOwn');\nvar isPlainObject = require('../lang/isPlainObject');\n\n    /*\n     * Helper function to flatten to a destination object.\n     * Used to remove the need to create intermediate objects while flattening.\n     */\n    function flattenTo(obj, result, prefix, level) {\n        forOwn(obj, function (value, key) {\n            var nestedPrefix = prefix ? prefix + '.' + key : key;\n\n            if (level !== 0 && isPlainObject(value)) {\n                flattenTo(value, result, nestedPrefix, level - 1);\n            } else {\n                result[nestedPrefix] = value;\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Recursively flattens an object.\n     * A new object containing all the elements is returned.\n     * If level is specified, it will only flatten up to that level.\n     */\n    function flatten(obj, level) {\n        if (obj == null) {\n            return {};\n        }\n\n        level = level == null ? -1 : level;\n        return flattenTo(obj, {}, '', level);\n    }\n\n    module.exports = flatten;\n\n\n"]},"metadata":{},"sourceType":"script"}