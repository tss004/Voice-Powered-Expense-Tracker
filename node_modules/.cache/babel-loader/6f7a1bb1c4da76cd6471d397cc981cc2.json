{"ast":null,"code":"import _objectSpread from\"C:/Users/hp/Desktop/Projects/Expense-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/hp/Desktop/Projects/Expense-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import{TextField,Typography,Grid,Button,FormControl,InputLabel,Select,MenuItem,Divider}from'@material-ui/core';import{v4 as uuidv4}from'uuid';import{useSpeechContext}from'@speechly/react-client';import Snackbar from'../../Snackbar/Snackbar';import formatDate from'../../../utils/formatDate';import{ExpenseTrackerContext}from'../../../context/context';import{incomeCategories,expenseCategories}from'../../../constants/categories';import useStyles from'./styles';import{InfoCard}from'../..';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initialState={amount:'',category:'',type:'Income',date:formatDate(new Date())};var NewTransactionForm=function NewTransactionForm(){var classes=useStyles();var _useContext=useContext(ExpenseTrackerContext),addTransaction=_useContext.addTransaction;var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _useSpeechContext=useSpeechContext(),segment=_useSpeechContext.segment;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var createTransaction=function createTransaction(){if(Number.isNaN(Number(formData.amount))||!formData.date.includes('-'))return;if(incomeCategories.map(function(iC){return iC.type;}).includes(formData.category)){setFormData(_objectSpread(_objectSpread({},formData),{},{type:'Income'}));}else if(expenseCategories.map(function(iC){return iC.type;}).includes(formData.category)){setFormData(_objectSpread(_objectSpread({},formData),{},{type:'Expense'}));}setOpen(true);addTransaction(_objectSpread(_objectSpread({},formData),{},{amount:Number(formData.amount),id:uuidv4()}));setFormData(initialState);};useEffect(function(){if(segment){if(segment.intent.intent==='add_expense'){setFormData(_objectSpread(_objectSpread({},formData),{},{type:'Expense'}));}else if(segment.intent.intent==='add_income'){setFormData(_objectSpread(_objectSpread({},formData),{},{type:'Income'}));}else if(segment.isFinal&&segment.intent.intent==='create_transaction'){return createTransaction();}else if(segment.isFinal&&segment.intent.intent==='cancel_transaction'){return setFormData(initialState);}segment.entities.forEach(function(s){var category=\"\".concat(s.value.charAt(0)).concat(s.value.slice(1).toLowerCase());switch(s.type){case'amount':setFormData(_objectSpread(_objectSpread({},formData),{},{amount:s.value}));break;case'category':if(incomeCategories.map(function(iC){return iC.type;}).includes(category)){setFormData(_objectSpread(_objectSpread({},formData),{},{type:'Income',category:category}));}else if(expenseCategories.map(function(iC){return iC.type;}).includes(category)){setFormData(_objectSpread(_objectSpread({},formData),{},{type:'Expense',category:category}));}break;case'date':setFormData(_objectSpread(_objectSpread({},formData),{},{date:s.value}));break;default:break;}});if(segment.isFinal&&formData.amount&&formData.category&&formData.type&&formData.date){createTransaction();}}},[segment]);var selectedCategories=formData.type==='Income'?incomeCategories:expenseCategories;return/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Snackbar,{open:open,setOpen:setOpen}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Type\"}),/*#__PURE__*/_jsxs(Select,{value:formData.type,onChange:function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},{type:e.target.value}));},children:[/*#__PURE__*/_jsx(MenuItem,{value:\"Income\",children:\"Income\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Expense\",children:\"Expense\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Category\"}),/*#__PURE__*/_jsx(Select,{value:formData.category,onChange:function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},{category:e.target.value}));},children:selectedCategories.map(function(c){return/*#__PURE__*/_jsx(MenuItem,{value:c.type,children:c.type},c.type);})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsx(TextField,{type:\"number\",label:\"Amount\",value:formData.amount,onChange:function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},{amount:e.target.value}));},fullWidth:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Date\",type:\"date\",value:formData.date,onChange:function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},{date:formatDate(e.target.value)}));}})}),/*#__PURE__*/_jsx(Button,{className:classes.button,variant:\"outlined\",color:\"primary\",fullWidth:true,onClick:createTransaction,children:\"Create\"}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",style:{lineHeight:'1.5em',marginTop:'20px'},children:/*#__PURE__*/_jsx(InfoCard,{})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Typography,{align:\"center\",variant:\"subtitle2\",gutterBottom:true,children:segment?/*#__PURE__*/_jsx(\"div\",{className:\"segment\",children:segment.words.map(function(w){return w.value;}).join(\" \")}):null})]})]});};export default NewTransactionForm;","map":{"version":3,"sources":["C:/Users/hp/Desktop/Projects/Expense-Tracker/src/components/Main/Form/Form.jsx"],"names":["React","useState","useContext","useEffect","TextField","Typography","Grid","Button","FormControl","InputLabel","Select","MenuItem","Divider","v4","uuidv4","useSpeechContext","Snackbar","formatDate","ExpenseTrackerContext","incomeCategories","expenseCategories","useStyles","InfoCard","initialState","amount","category","type","date","Date","NewTransactionForm","classes","addTransaction","formData","setFormData","segment","open","setOpen","createTransaction","Number","isNaN","includes","map","iC","id","intent","isFinal","entities","forEach","s","value","charAt","slice","toLowerCase","selectedCategories","e","target","c","button","lineHeight","marginTop","words","w","join"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem, Divider } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\nimport { InfoCard } from '../..';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={3}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={3}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={3}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n\r\n      <Grid item xs={3}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\r\n          <InfoCard />\r\n        </Typography>\r\n        <br/>\r\n        <Divider/>\r\n        <br/>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment ? (\r\n            <div className=\"segment\">\r\n              {segment.words.map((w) => w.value).join(\" \")}\r\n            </div>\r\n          ) : null}\r\n          {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n\r\n\r\n\r\n      \r\n      \r\n\r\n\r\n    </Grid>\r\n\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n"]},"metadata":{},"sourceType":"module"}