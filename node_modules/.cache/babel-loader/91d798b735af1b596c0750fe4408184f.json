{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/Users/hp/Desktop/Projects/Expense-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar base_64_1 = require(\"base-64\");\n\nexports.minTokenValidTime = 60 * 60 * 1000; // 1 hour\n\nfunction fetchToken(baseUrl, projectId, appId, deviceId) {\n  var fetcher = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : fetch;\n  var nowFn = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Date.now;\n\n  var _a;\n\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var body, response, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (projectId !== undefined) {\n              body = {\n                projectId: projectId,\n                deviceId: deviceId\n              };\n            } else {\n              body = {\n                appId: appId,\n                deviceId: deviceId\n              };\n            }\n\n            _context.next = 3;\n            return fetcher(baseUrl, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(body)\n            });\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            json = _context.sent;\n\n            if (!(response.status !== 200)) {\n              _context.next = 9;\n              break;\n            }\n\n            throw Error((_a = json.error) !== null && _a !== void 0 ? _a : \"Speechly API login request failed with \".concat(response.status));\n\n          case 9:\n            if (!(json.access_token === undefined)) {\n              _context.next = 11;\n              break;\n            }\n\n            throw Error('Invalid login response from Speechly API');\n\n          case 11:\n            if (validateToken(json.access_token, projectId, appId, deviceId, nowFn)) {\n              _context.next = 13;\n              break;\n            }\n\n            throw Error('Invalid token received from Speechly API');\n\n          case 13:\n            return _context.abrupt(\"return\", json.access_token);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\n\nexports.fetchToken = fetchToken;\n\nfunction validateToken(token, projectId, appId, deviceId) {\n  var now = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Date.now;\n  var decoded = decodeToken(token);\n\n  if (decoded.expiresAtMs - now() < exports.minTokenValidTime) {\n    return false;\n  }\n\n  if (decoded.appId !== appId || decoded.projectId !== projectId) {\n    return false;\n  }\n\n  if (decoded.deviceId !== deviceId) {\n    return false;\n  }\n\n  return true;\n}\n\nexports.validateToken = validateToken;\n\nfunction decodeToken(token) {\n  var b = token.split('.')[1];\n  var body;\n\n  try {\n    body = JSON.parse(base_64_1.decode(b));\n  } catch (e) {\n    throw new Error('Error decoding Speechly token!');\n  }\n\n  return {\n    appId: body.appId,\n    projectId: body.projectId,\n    deviceId: body.deviceId,\n    configId: body.configId,\n    scopes: body.scope.split(' '),\n    issuer: body.iss,\n    audience: body.aud,\n    expiresAtMs: body.exp * 1000\n  };\n}\n\nexports.decodeToken = decodeToken;","map":{"version":3,"sources":["../../src/websocket/token.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_64_1 = require(\"base-64\");\nexports.minTokenValidTime = 60 * 60 * 1000; // 1 hour\nfunction fetchToken(baseUrl, projectId, appId, deviceId, fetcher = fetch, nowFn = Date.now) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        let body;\n        if (projectId !== undefined) {\n            body = { projectId, deviceId };\n        }\n        else {\n            body = { appId, deviceId };\n        }\n        const response = yield fetcher(baseUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body),\n        });\n        const json = yield response.json();\n        if (response.status !== 200) {\n            throw Error((_a = json.error) !== null && _a !== void 0 ? _a : `Speechly API login request failed with ${response.status}`);\n        }\n        if (json.access_token === undefined) {\n            throw Error('Invalid login response from Speechly API');\n        }\n        if (!validateToken(json.access_token, projectId, appId, deviceId, nowFn)) {\n            throw Error('Invalid token received from Speechly API');\n        }\n        return json.access_token;\n    });\n}\nexports.fetchToken = fetchToken;\nfunction validateToken(token, projectId, appId, deviceId, now = Date.now) {\n    const decoded = decodeToken(token);\n    if (decoded.expiresAtMs - now() < exports.minTokenValidTime) {\n        return false;\n    }\n    if (decoded.appId !== appId || decoded.projectId !== projectId) {\n        return false;\n    }\n    if (decoded.deviceId !== deviceId) {\n        return false;\n    }\n    return true;\n}\nexports.validateToken = validateToken;\nfunction decodeToken(token) {\n    const b = token.split('.')[1];\n    let body;\n    try {\n        body = JSON.parse(base_64_1.decode(b));\n    }\n    catch (e) {\n        throw new Error('Error decoding Speechly token!');\n    }\n    return {\n        appId: body.appId,\n        projectId: body.projectId,\n        deviceId: body.deviceId,\n        configId: body.configId,\n        scopes: body.scope.split(' '),\n        issuer: body.iss,\n        audience: body.aud,\n        expiresAtMs: body.exp * 1000,\n    };\n}\nexports.decodeToken = decodeToken;\n//# sourceMappingURL=token.js.map"]},"metadata":{},"sourceType":"script"}