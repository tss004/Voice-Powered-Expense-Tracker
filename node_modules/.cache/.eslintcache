[{"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\App.js":"2","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\context\\context.js":"3","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\styles.js":"4","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\context\\contextReducer.js":"5","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\ButtonAppBar\\ButtonAppBar.jsx":"6","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\index.js":"7","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\InfoCard.jsx":"8","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Details\\Details.jsx":"9","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Main\\Main.jsx":"10","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Snackbar\\Snackbar.jsx":"11","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Snackbar\\styles.js":"12","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Main\\List\\List.jsx":"13","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Main\\Form\\Form.jsx":"14","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Main\\List\\styles.js":"15","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Main\\Form\\styles.js":"16","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\constants\\categories.js":"17","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\utils\\formatDate.js":"18","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Main\\styles.js":"19","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\useTransactions.js":"20","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Details\\styles.js":"21"},{"size":476,"mtime":1626333942130,"results":"22","hashOfConfig":"23"},{"size":1547,"mtime":1624683144347,"results":"24","hashOfConfig":"23"},{"size":2032,"mtime":1608476407000,"results":"25","hashOfConfig":"23"},{"size":582,"mtime":1608476407000,"results":"26","hashOfConfig":"23"},{"size":583,"mtime":1608476407000,"results":"27","hashOfConfig":"23"},{"size":1444,"mtime":1624635784185,"results":"28","hashOfConfig":"23"},{"size":216,"mtime":1608476407000,"results":"29","hashOfConfig":"23"},{"size":529,"mtime":1626880034031,"results":"30","hashOfConfig":"23"},{"size":735,"mtime":1624681532922,"results":"31","hashOfConfig":"23"},{"size":1170,"mtime":1624681788195,"results":"32","hashOfConfig":"23"},{"size":797,"mtime":1608476407000,"results":"33","hashOfConfig":"23"},{"size":206,"mtime":1608476407000,"results":"34","hashOfConfig":"23"},{"size":1404,"mtime":1624629070058,"results":"35","hashOfConfig":"23"},{"size":5239,"mtime":1624682240889,"results":"36","hashOfConfig":"23"},{"size":416,"mtime":1608476407000,"results":"37","hashOfConfig":"23"},{"size":247,"mtime":1608476407000,"results":"38","hashOfConfig":"23"},{"size":1693,"mtime":1608476407000,"results":"39","hashOfConfig":"23"},{"size":301,"mtime":1608476407000,"results":"40","hashOfConfig":"23"},{"size":514,"mtime":1608476407000,"results":"41","hashOfConfig":"23"},{"size":1124,"mtime":1608476407000,"results":"42","hashOfConfig":"23"},{"size":247,"mtime":1608476407000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"fot1l5",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\index.js",["91"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { SpeechProvider } from '@speechly/react-client';\r\n\r\nimport { Provider } from './context/context';\r\nimport App from './App';\r\nimport './index.css';\r\n{/*///7c4aee08-1073-4a32-b862-ebe1850e0732*/}\r\nReactDOM.render(\r\n  <SpeechProvider appId=\"72e81129-6bc2-4180-8a41-0ecc2378b88e\" language=\"en-US\">\r\n    <Provider>\r\n      <App />\r\n    </Provider>\r\n  </SpeechProvider>,\r\n  document.getElementById('root'),\r\n);\r\n","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\App.js",[],"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\context\\context.js",[],"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\styles.js",[],"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\context\\contextReducer.js",[],"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\ButtonAppBar\\ButtonAppBar.jsx",["92","93","94","95"],"import React,{ useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {ExpenseTrackerContext} from '../../context/context';\r\nimport { Delete, MoneyOff } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n  const { transactions, deleteTransaction } = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            EXPENSE TRACKER\r\n          </Typography>\r\n          <Button color=\"inherit\">Home</Button>\r\n          <Button color=\"inherit\">about</Button>\r\n          <Button color=\"inherit\">Contact</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\index.js",[],"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\InfoCard.jsx",[],"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Details\\Details.jsx",[],"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Main\\Main.jsx",["96","97","98","99"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card, CardHeader, CardContent, Typography, Grid, Divider } from '@material-ui/core';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport { ExpenseTrackerContext } from '../../context/context';\r\nimport useStyles from './styles';\r\nimport Form from './Form/Form';\r\nimport List from './List/List';\r\nimport InfoCard from '../InfoCard';\r\n\r\nconst ExpenseTracker = () => {\r\n  const classes = useStyles();\r\n  const { balance } = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title=\"EXPENSE TRACKER\" titleTypographyProps={{variant:'h2' }} align=\"center\"/>\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h5\">Total Valid Balance is <u>Rs.{balance}</u></Typography>\r\n        <Divider className={classes.divider} />\r\n        <Form />\r\n      </CardContent>\r\n      <CardContent className={classes.cartContent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <List />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseTracker;\r\n","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Snackbar\\Snackbar.jsx",[],"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Snackbar\\styles.js",[],"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Main\\List\\List.jsx",[],"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Main\\Form\\Form.jsx",["100"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem, Divider } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\nimport { InfoCard } from '../..';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={3}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={3}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={3}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n\r\n      <Grid item xs={3}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\r\n          <InfoCard />\r\n        </Typography>\r\n        <br/>\r\n        <Divider/>\r\n        <br/>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment ? (\r\n            <div className=\"segment\">\r\n              {segment.words.map((w) => w.value).join(\" \")}\r\n            </div>\r\n          ) : null}\r\n          {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n\r\n\r\n\r\n      \r\n      \r\n\r\n\r\n    </Grid>\r\n\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Main\\List\\styles.js",[],"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\constants\\categories.js",[],"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\utils\\formatDate.js",["101"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n","C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Main\\styles.js",[],"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\useTransactions.js",[],"C:\\Users\\hp\\Desktop\\Projects\\Expense-Tracker\\src\\components\\Details\\styles.js",[],{"ruleId":"102","severity":1,"message":"103","line":8,"column":1,"nodeType":"104","messageId":"105","endLine":8,"endColumn":46},{"ruleId":"106","severity":1,"message":"107","line":10,"column":10,"nodeType":"108","messageId":"109","endLine":10,"endColumn":16},{"ruleId":"106","severity":1,"message":"110","line":10,"column":18,"nodeType":"108","messageId":"109","endLine":10,"endColumn":26},{"ruleId":"106","severity":1,"message":"111","line":26,"column":11,"nodeType":"108","messageId":"109","endLine":26,"endColumn":23},{"ruleId":"106","severity":1,"message":"112","line":26,"column":25,"nodeType":"108","messageId":"109","endLine":26,"endColumn":42},{"ruleId":"106","severity":1,"message":"113","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"114","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"115","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":26},{"ruleId":"106","severity":1,"message":"116","line":8,"column":8,"nodeType":"108","messageId":"109","endLine":8,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":79,"column":6,"nodeType":"119","endLine":79,"endColumn":15,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":1,"nodeType":"123","endLine":11,"endColumn":3},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'Delete' is defined but never used.","Identifier","unusedVar","'MoneyOff' is defined but never used.","'transactions' is assigned a value but never used.","'deleteTransaction' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useSpeechContext' is defined but never used.","'InfoCard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["124"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"125","fix":"126"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"127","text":"128"},[3050,3059],"[createTransaction, formData, segment]"]